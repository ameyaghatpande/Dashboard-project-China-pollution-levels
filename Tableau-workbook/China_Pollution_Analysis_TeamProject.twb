<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0505.1445                               -->
<workbook source-build='10.2.2 (10200.17.0505.1445)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='China_Pollution_Analysis_TeamProject' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column caption='Safety level standard US' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='35.0'>
        <calculation class='tableau' formula='35.0' />
      </column>
    </datasource>
    <datasource caption='annual-co-emissions-per-country (2)' inline='true' name='federated.17v36s400fxgdu1dqxug91prayje (copy)' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='annual-co-emissions-per-country' name='textscan.0h3oz4b1efyvtu127sb7z0s18qk4 (copy)'>
            <connection class='textscan' directory='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen' filename='annual-co-emissions-per-country.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0h3oz4b1efyvtu127sb7z0s18qk4 (copy)' name='annual-co-emissions-per-country.csv' table='[annual-co-emissions-per-country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy|#|#|MMMMddyy|#|#|HHmm|#|#|mmss|#|#|EEEEMMMMdd|#|#|EEEEMMdd|#|#|yyMM|#|#|ddMM' name='Year' ordinal='1' />
            <column datatype='string' name='Country code' ordinal='2' />
            <column datatype='real' name='CO2 annual emissions by nation-CDIAC' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 annual emissions by nation-CDIAC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 annual emissions by nation-CDIAC]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>CO2 annual emissions by nation-CDIAC</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/annual-co-emissions-per-country (2).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CO2 annual emissions by nation-CDIAC</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO2 annual emissions by nation-CDIAC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2 annual emissions by nation-CDIAC</remote-alias>
              <ordinal>0</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7575</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10300.34678</statistic>
                <statistic aggregation='Count' datatype='integer'>58080</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code</remote-alias>
              <ordinal>1</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>220</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABW&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>58080</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>2</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>220</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>58080</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Libya&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58080.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>58080</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58080.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>264</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1751-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>58080</statistic>
                <statistic aggregation='Median' datatype='date'>#1883-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.412088' measure-ordering='alphabetic' measure-percentage='0.461538' parameter-percentage='0.126374' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zanzibar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yugoslavia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='city_date' inline='true' name='federated.1iuix2807mckp015qce1o0och82t' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='city_date' name='textscan.15toumc1xd41gi1fbgen51gmwtqz'>
            <connection class='textscan' directory='C:/Users/amarj/Downloads' filename='city_date.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.15toumc1xd41gi1fbgen51gmwtqz' name='city_date.csv' table='[city_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Site' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Site</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Site]</local-name>
            <parent-name>[city_date.csv]</parent-name>
            <remote-alias>Site</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[city_date.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[city_date.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[city_date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Safe' datatype='boolean' name='[Calculation_1347139254700331009]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Value] &lt; [Parameters].[Parameter 1]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/city_date.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>city_date.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3135</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2008-04-08#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-03-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>9932</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-06-24#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9932.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>9932</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9932.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Site</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Site]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Site</remote-alias>
              <ordinal>2</ordinal>
              <family>city_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Beijing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Shenyang&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9932</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Guangzhou&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value</remote-alias>
              <ordinal>3</ordinal>
              <family>city_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4481</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>708924.15626228496</statistic>
                <statistic aggregation='Avg' datatype='real'>71.377784561244965</statistic>
                <statistic aggregation='Min' datatype='real'>-1.55</statistic>
                <statistic aggregation='Max' datatype='real'>661.33333333300004</statistic>
                <statistic aggregation='Stdev' datatype='real'>57.456859529296182</statistic>
                <statistic aggregation='StdevP' datatype='real'>57.453966944426163</statistic>
                <statistic aggregation='Var' datatype='real'>3301.2907069692737</statistic>
                <statistic aggregation='VarP' datatype='real'>3300.9583176512142</statistic>
                <statistic aggregation='Count' datatype='integer'>9932</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>83386553.706863597</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.489011' measure-ordering='alphabetic' measure-percentage='0.368132' parameter-percentage='0.142857' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Safety level standard US' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='35.0'>
          <calculation class='tableau' formula='35.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (API_EN.ATM.PM25.MC.M3_DS2_en_excel_v2)' inline='true' name='federated.1ujskas1uvyf981byqaj20rxkqml' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='API_EN.ATM.PM25.MC.M3_DS2_en_excel_v2' name='excel-direct.07hicla07g2h001dcqp7e1xe4d82'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen/API_EN.ATM.PM25.MC.M3_DS2_en_excel_v2.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07hicla07g2h001dcqp7e1xe4d82' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F15049:no:A1:F15049:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Indicator Name' ordinal='2' />
            <column datatype='string' name='Indicator Code' ordinal='3' />
            <column datatype='date' date-parse-format='yyyy|#|#|MMMMddyy|#|#|HHmm|#|#|mmss|#|#|yyMM|#|#|ddMM' name='variable' ordinal='4' />
            <column datatype='real' name='value' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F15049:no:A1:F15049:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Indicator Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Indicator Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>7</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[variable]' role='dimension' type='ordinal' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/Sheet1 (API_EN.ATM.PM25.MC.M3_DS2_en_excel_v2).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>264</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABW&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>15048</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>264</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>15048</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator Code</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;EN.ATM.PM25.MC.M3&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;EN.ATM.PM25.MC.M3&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>15048</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;EN.ATM.PM25.MC.M3&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;PM2.5 air pollution, mean annual exposure (micrograms per cubic meter)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PM2.5 air pollution, mean annual exposure (micrograms per cubic meter)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>15048</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;PM2.5 air pollution, mean annual exposure (micrograms per cubic meter)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15048.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>15048</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15048.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2393</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.30293518</statistic>
                <statistic aggregation='Max' datatype='real'>135.55396289999999</statistic>
                <statistic aggregation='Count' datatype='integer'>2400</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>variable</remote-name>
              <remote-type>133</remote-type>
              <local-name>[variable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>variable</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>57</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1960-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>15048</statistic>
                <statistic aggregation='Median' datatype='date'>#1988-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.417582' measure-ordering='alphabetic' measure-percentage='0.456044' parameter-percentage='0.126374' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='SO2emission_USA' inline='true' name='federated.1xrbtjb0gvu7zd15tnxrh1dv53yq' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SO2emission_USA' name='textscan.09gpnvh00390g71c9ceba03owy91'>
            <connection class='textscan' directory='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen' filename='SO2emission_USA.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.09gpnvh00390g71c9ceba03owy91' name='SO2emission_USA.csv' table='[SO2emission_USA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='yyyy|#|#|HHmm|#|#|mmss|#|#|yyMM|#|#|ddMM|#|#|MMMMddyy' name='year' ordinal='0' />
            <column datatype='integer' name='SO2 emission' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='Unit' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SO2emission_USA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[SO2emission_USA.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SO2 emission</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SO2 emission]</local-name>
            <parent-name>[SO2emission_USA.csv]</parent-name>
            <remote-alias>SO2 emission</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[SO2emission_USA.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[SO2emission_USA.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[F3]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/SO2emission_USA.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>0</ordinal>
              <family>SO2emission_USA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CHINA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;USA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>28.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>28</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SO2 emission</remote-name>
              <remote-type>2</remote-type>
              <local-name>[SO2 emission]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SO2 emission</remote-alias>
              <ordinal>2</ordinal>
              <family>SO2emission_USA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500211.0</statistic>
                <statistic aggregation='Avg' datatype='real'>17864.678571428572</statistic>
                <statistic aggregation='Min' datatype='integer'>4991</statistic>
                <statistic aggregation='Max' datatype='integer'>31218</statistic>
                <statistic aggregation='Stdev' datatype='real'>7711.6114233478456</statistic>
                <statistic aggregation='StdevP' datatype='real'>7572.652088052354</statistic>
                <statistic aggregation='Var' datatype='real'>59468950.744708993</statistic>
                <statistic aggregation='VarP' datatype='real'>57345059.646683671</statistic>
                <statistic aggregation='Count' datatype='integer'>28</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10541770403.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Unit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit</remote-alias>
              <ordinal>3</ordinal>
              <family>SO2emission_USA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;in 1000 tons&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;in 1000 tons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;in 1000 tons&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>4</ordinal>
              <family>SO2emission_USA.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1970-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>28</statistic>
                <statistic aggregation='Median' datatype='date'>#2008-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.483516' measure-ordering='alphabetic' measure-percentage='0.368132' parameter-percentage='0.148352' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='so-emissions-per-capita-tonnes-per-year (3)' inline='true' name='federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='so-emissions-per-capita-tonnes-per-year' name='textscan.0ysweaj0ohtt8q18dpca60xbj9rv'>
            <connection class='textscan' directory='C:/Users/amarj/Downloads' filename='so-emissions-per-capita-tonnes-per-year.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ysweaj0ohtt8q18dpca60xbj9rv' name='so-emissions-per-capita-tonnes-per-year.csv' table='[so-emissions-per-capita-tonnes-per-year#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Country code' ordinal='2' />
            <column datatype='real' name='SO2 emissions per capita- ClioInfra' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[so-emissions-per-capita-tonnes-per-year.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[so-emissions-per-capita-tonnes-per-year.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[so-emissions-per-capita-tonnes-per-year.csv]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SO2 emissions per capita- ClioInfra</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SO2 emissions per capita- ClioInfra]</local-name>
            <parent-name>[so-emissions-per-capita-tonnes-per-year.csv]</parent-name>
            <remote-alias>SO2 emissions per capita- ClioInfra</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[so-emissions-per-capita-tonnes-per-year.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='InsertImage' datatype='string' name='[Calculation_109212307886563329]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;image&quot;' />
      </column>
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/so-emissions-per-capita-tonnes-per-year (3).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code</remote-alias>
              <ordinal>0</ordinal>
              <family>so-emissions-per-capita-tonnes-per-year.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>130</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AGO&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2079</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>1</ordinal>
              <family>so-emissions-per-capita-tonnes-per-year.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>130</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Albania&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2079</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Kuwait&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2079.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2079</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2079.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SO2 emissions per capita- ClioInfra</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SO2 emissions per capita- ClioInfra]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SO2 emissions per capita- ClioInfra</remote-alias>
              <ordinal>3</ordinal>
              <family>so-emissions-per-capita-tonnes-per-year.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1932</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37.098280570699998</statistic>
                <statistic aggregation='Avg' datatype='real'>0.017844290798797499</statistic>
                <statistic aggregation='Min' datatype='real'>1.6666700000000001e-05</statistic>
                <statistic aggregation='Max' datatype='real'>0.42506091699999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.040562527536879243</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.04055277106589341</statistic>
                <statistic aggregation='Var' datatype='real'>0.0016453186401800871</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0016445272411227615</statistic>
                <statistic aggregation='Count' datatype='integer'>2079</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.0809646409331712</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>so-emissions-per-capita-tonnes-per-year.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4002040.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1924.9831649831649</statistic>
                <statistic aggregation='Min' datatype='integer'>1850</statistic>
                <statistic aggregation='Max' datatype='integer'>2000</statistic>
                <statistic aggregation='Stdev' datatype='real'>46.113506081256375</statistic>
                <statistic aggregation='StdevP' datatype='real'>46.102414438021668</statistic>
                <statistic aggregation='Var' datatype='real'>2126.4554431060687</statistic>
                <statistic aggregation='VarP' datatype='real'>2125.4326170151085</statistic>
                <statistic aggregation='Count' datatype='integer'>2079</statistic>
                <statistic aggregation='Median' datatype='integer'>1920</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7708278400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.386423' measure-ordering='alphabetic' measure-percentage='0.436031' parameter-percentage='0.177546' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pm25-concentrations-in-gm3-by-country (3)' inline='true' name='federated.13k8wle106n3221bh5h480vnxnsx (copy 2)' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pm25-concentrations-in-gm3-by-country' name='textscan.03imlso1ag6osx17hfokz0fpm1j9'>
            <connection class='textscan' directory='C:/Users/amarj/Downloads' filename='pm25-concentrations-in-gm3-by-country.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03imlso1ag6osx17hfokz0fpm1j9' name='pm25-concentrations-in-gm3-by-country.csv' table='[pm25-concentrations-in-gm3-by-country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='string' name='Country code' ordinal='2' />
            <column datatype='integer' name='PM2.5 concentration- StateofGlobalAir' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[pm25-concentrations-in-gm3-by-country.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[pm25-concentrations-in-gm3-by-country.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[pm25-concentrations-in-gm3-by-country.csv]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5 concentration- StateofGlobalAir</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PM2.5 concentration- StateofGlobalAir]</local-name>
            <parent-name>[pm25-concentrations-in-gm3-by-country.csv]</parent-name>
            <remote-alias>PM2.5 concentration- StateofGlobalAir</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pm25-concentrations-in-gm3-by-country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country code]' derivation='None' name='[none:Country code:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/pm25-concentrations-in-gm3-by-country (3).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code</remote-alias>
              <ordinal>0</ordinal>
              <family>pm25-concentrations-in-gm3-by-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>189</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AFG&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1880</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>1</ordinal>
              <family>pm25-concentrations-in-gm3-by-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>189</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1890</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Lesotho&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1890.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1890</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1890.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PM2.5 concentration- StateofGlobalAir</remote-name>
              <remote-type>2</remote-type>
              <local-name>[PM2.5 concentration- StateofGlobalAir]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PM2.5 concentration- StateofGlobalAir</remote-alias>
              <ordinal>3</ordinal>
              <family>pm25-concentrations-in-gm3-by-country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>55333.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29.276719576719575</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>136</statistic>
                <statistic aggregation='Stdev' datatype='real'>20.964896366339069</statistic>
                <statistic aggregation='StdevP' datatype='real'>20.959349363631489</statistic>
                <statistic aggregation='Var' datatype='real'>439.52687965133703</statistic>
                <statistic aggregation='VarP' datatype='real'>439.29432574675963</statistic>
                <statistic aggregation='Count' datatype='integer'>1890</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2450235.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>pm25-concentrations-in-gm3-by-country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3792285.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2006.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1990</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>8.2635422324590113</statistic>
                <statistic aggregation='StdevP' datatype='real'>8.2613558209291522</statistic>
                <statistic aggregation='Var' datatype='real'>68.286130227633663</statistic>
                <statistic aggregation='VarP' datatype='real'>68.25</statistic>
                <statistic aggregation='Count' datatype='integer'>1890</statistic>
                <statistic aggregation='Median' datatype='integer'>2011</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7609348845.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.434066' measure-ordering='alphabetic' measure-percentage='0.43956' parameter-percentage='0.126374' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='clean_air_200' inline='true' name='federated.1izsi0717ny20613mngne14xrtww' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clean_air_200' name='textscan.0oae1hg18rpgk510ao50z0zmww4l'>
            <connection class='textscan' directory='C:/Users/amarj/Downloads' filename='clean_air_200.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0oae1hg18rpgk510ao50z0zmww4l' name='clean_air_200.csv' table='[clean_air_200#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Company Name' ordinal='1' />
            <column datatype='string' name='GICS Sector' ordinal='2' />
            <column datatype='real' name='Clean energy revenue USD million ' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[clean_air_200.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company Name]</local-name>
            <parent-name>[clean_air_200.csv]</parent-name>
            <remote-alias>Company Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GICS Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GICS Sector]</local-name>
            <parent-name>[clean_air_200.csv]</parent-name>
            <remote-alias>GICS Sector</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean energy revenue USD million </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Clean energy revenue USD million ]</local-name>
            <parent-name>[clean_air_200.csv]</parent-name>
            <remote-alias>Clean energy revenue USD million </remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_air_200.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Clean energy revenue USD million' datatype='real' name='[Clean energy revenue USD million ]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/clean_air_200.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Clean energy revenue USD million </remote-name>
              <remote-type>4</remote-type>
              <local-name>[Clean energy revenue USD million ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Clean energy revenue USD million </remote-alias>
              <ordinal>0</ordinal>
              <family>clean_air_200.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>352099.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1760.4949999999999</statistic>
                <statistic aggregation='Min' datatype='real'>134.0</statistic>
                <statistic aggregation='Max' datatype='real'>40705.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>4692.3869465610233</statistic>
                <statistic aggregation='StdevP' datatype='real'>4680.6412787111767</statistic>
                <statistic aggregation='Var' datatype='real'>22018495.256256282</statistic>
                <statistic aggregation='VarP' datatype='real'>21908402.779975001</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
                <statistic aggregation='Median' datatype='real'>553.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5001549085.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company Name</remote-alias>
              <ordinal>1</ordinal>
              <family>clean_air_200.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>200</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABB Ltd&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhuzhou Kibing Group Co Ltd&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>clean_air_200.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AUSTRALIA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UNITED STATES&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GICS Sector</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GICS Sector]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GICS Sector</remote-alias>
              <ordinal>3</ordinal>
              <family>clean_air_200.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer Discretionary&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Utilities&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Industrials&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>200.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.461538' measure-ordering='alphabetic' measure-percentage='0.412088' parameter-percentage='0.126374' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='china_all (2)' inline='true' name='federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='china_all' name='textscan.10pspgz1lwt03y10ww14i0hll8rw (copy)'>
            <connection class='textscan' directory='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen' filename='china_all.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[china_all.csv].[Year]' />
              <expression op='[annual-co-emissions-per-country.csv].[Year]' />
            </expression>
          </clause>
          <relation connection='textscan.10pspgz1lwt03y10ww14i0hll8rw (copy)' name='china_all.csv' table='[china_all#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Site' ordinal='0' />
              <column datatype='string' name='Parameter' ordinal='1' />
              <column datatype='datetime' name='Date (LST)' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='integer' name='Month' ordinal='4' />
              <column datatype='integer' name='Day' ordinal='5' />
              <column datatype='integer' name='Hour' ordinal='6' />
              <column datatype='integer' name='Value' ordinal='7' />
              <column datatype='string' name='Unit' ordinal='8' />
              <column datatype='string' name='Duration' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.10pspgz1lwt03y10ww14i0hll8rw (copy)' name='annual-co-emissions-per-country.csv' table='[annual-co-emissions-per-country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Country code' ordinal='2' />
              <column datatype='real' name='CO2 annual emissions by nation-CDIAC' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[CO2 annual emissions by nation-CDIAC]' value='[annual-co-emissions-per-country.csv].[CO2 annual emissions by nation-CDIAC]' />
          <map key='[Country code]' value='[annual-co-emissions-per-country.csv].[Country code]' />
          <map key='[Date (LST)]' value='[china_all.csv].[Date (LST)]' />
          <map key='[Day]' value='[china_all.csv].[Day]' />
          <map key='[Duration]' value='[china_all.csv].[Duration]' />
          <map key='[Entity]' value='[annual-co-emissions-per-country.csv].[Entity]' />
          <map key='[Hour]' value='[china_all.csv].[Hour]' />
          <map key='[Month]' value='[china_all.csv].[Month]' />
          <map key='[Parameter]' value='[china_all.csv].[Parameter]' />
          <map key='[Site]' value='[china_all.csv].[Site]' />
          <map key='[Unit]' value='[china_all.csv].[Unit]' />
          <map key='[Value]' value='[china_all.csv].[Value]' />
          <map key='[Year (annual-co-emissions-per-country.csv)]' value='[annual-co-emissions-per-country.csv].[Year]' />
          <map key='[Year]' value='[china_all.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Site</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Site]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Site</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Parameter]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Parameter</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date (LST)</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date (LST)]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Date (LST)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias>Duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[china_all.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (annual-co-emissions-per-country.csv)]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 annual emissions by nation-CDIAC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 annual emissions by nation-CDIAC]</local-name>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias>CO2 annual emissions by nation-CDIAC</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[annual-co-emissions-per-country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Not safe' datatype='boolean' name='[Calculation_957859357907955712]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Value] &gt; [Parameters].[Parameter 1]' />
      </column>
      <column aggregation='Attribute' caption='avg safe level date' datatype='real' name='[Calculation_957859357908074497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{EXCLUDE DATETRUNC(&apos;hour&apos;, [Date (LST)]) : AVG([Value])}' />
      </column>
      <column aggregation='Attribute' caption='above safe limit' datatype='boolean' name='[Calculation_957859357908361218]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_957859357908074497] &gt; [Parameters].[Parameter 1]' />
      </column>
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year (annual-co-emissions-per-country.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/china_all (2).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[CO2 annual emissions by nation-CDIAC]' value='[Extract].[CO2 annual emissions by nation-CDIAC]' />
            <map key='[Country code]' value='[Extract].[Country code]' />
            <map key='[Date (LST)]' value='[Extract].[Date (LST)]' />
            <map key='[Day]' value='[Extract].[Day]' />
            <map key='[Duration]' value='[Extract].[Duration]' />
            <map key='[Entity]' value='[Extract].[Entity]' />
            <map key='[Hour]' value='[Extract].[Hour]' />
            <map key='[Month]' value='[Extract].[Month]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Parameter]' value='[Extract].[Parameter]' />
            <map key='[Site]' value='[Extract].[Site]' />
            <map key='[Unit]' value='[Extract].[Unit]' />
            <map key='[Value]' value='[Extract].[Value]' />
            <map key='[Year (annual-co-emissions-per-country.csv)]' value='[Extract].[Year]' />
            <map key='[Year]' value='[Extract].[Year1]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CO2 annual emissions by nation-CDIAC</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO2 annual emissions by nation-CDIAC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2 annual emissions by nation-CDIAC</remote-alias>
              <ordinal>0</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1224</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10300.34678</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code</remote-alias>
              <ordinal>1</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>220</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABW&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date (LST)</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Date (LST)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date (LST)</remote-alias>
              <ordinal>2</ordinal>
              <family>china_all.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>54024</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2008-04-08 15:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-12-31 23:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2013-05-12 17:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Day</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Day</remote-alias>
              <ordinal>3</ordinal>
              <family>china_all.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>31</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Duration</remote-alias>
              <ordinal>4</ordinal>
              <family>china_all.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1 Hr&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;1 Hr&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;1 Hr&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>5</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>220</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>6</ordinal>
              <family>china_all.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>347167920.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.494933749025721</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.9294379632398417</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9294378485209602</statistic>
                <statistic aggregation='Var' datatype='real'>48.017110486389527</statistic>
                <statistic aggregation='VarP' datatype='real'>48.017108896514792</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5440876320.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>7</ordinal>
              <family>china_all.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Parameter</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Parameter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Parameter</remote-alias>
              <ordinal>9</ordinal>
              <family>china_all.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;PM2.5&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PM2.5&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;PM2.5&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Site</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Site]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Site</remote-alias>
              <ordinal>10</ordinal>
              <family>china_all.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Beijing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Shenyang&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Unit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit</remote-alias>
              <ordinal>11</ordinal>
              <family>china_all.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;µg/m³&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;µg/mg³&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value</remote-alias>
              <ordinal>12</ordinal>
              <family>china_all.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>622</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2355182500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>77.981475950787072</statistic>
                <statistic aggregation='Min' datatype='integer'>-15</statistic>
                <statistic aggregation='Max' datatype='integer'>994</statistic>
                <statistic aggregation='Stdev' datatype='real'>70.745079281490518</statistic>
                <statistic aggregation='StdevP' datatype='real'>70.74507811028495</statistic>
                <statistic aggregation='Var' datatype='real'>5004.866242544379</statistic>
                <statistic aggregation='VarP' datatype='real'>5004.866076830318</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>334816671860.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year (annual-co-emissions-per-country.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>13</ordinal>
              <family>annual-co-emissions-per-country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2008</statistic>
                <statistic aggregation='Max' datatype='integer'>2014</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='Median' datatype='integer'>2013</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>14</ordinal>
              <family>china_all.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2008</statistic>
                <statistic aggregation='Max' datatype='integer'>2014</statistic>
                <statistic aggregation='Count' datatype='integer'>30201820</statistic>
                <statistic aggregation='Median' datatype='integer'>2013</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.381201' measure-ordering='alphabetic' measure-percentage='0.548303' parameter-percentage='0.0704961' rowDisplayCount='5000' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Safety level standard US' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='35.0'>
          <calculation class='tableau' formula='35.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (china_investment)' inline='true' name='federated.01k1ol80q1qpqc1aihak60h1vi0o' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='china_investment' name='excel-direct.1yxlt2g0wswjvr1gsjawr0nicvqg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen/china_investment.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1yxlt2g0wswjvr1gsjawr0nicvqg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='0' />
            <column datatype='real' name='data' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data</remote-name>
            <remote-type>5</remote-type>
            <local-name>[data]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>data</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Data' datatype='real' name='[data]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/Sheet1 (china_investment).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data</remote-name>
              <remote-type>5</remote-type>
              <local-name>[data]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6536.7600000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>653.67600000000004</statistic>
                <statistic aggregation='Min' datatype='real'>256.60000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>957.54999999999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>256.02501909861172</statistic>
                <statistic aggregation='StdevP' datatype='real'>242.88665950191674</statistic>
                <statistic aggregation='Var' datatype='real'>65548.810404444492</statistic>
                <statistic aggregation='VarP' datatype='real'>58993.92936400004</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4862862.4234000007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2006-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='date'>#2011-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.335165' measure-ordering='alphabetic' measure-percentage='0.445055' parameter-percentage='0.21978' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (satandard)' inline='true' name='federated.08bhpgw1a8ulb5157sbp91ghgv77' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='satandard' name='excel-direct.0mvcrej18nevx112hwgwt0gqw4g5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen/satandard.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0mvcrej18nevx112hwgwt0gqw4g5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D13:no:A1:D13:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Gas' ordinal='1' />
            <column datatype='string' name='Standard' ordinal='2' />
            <column datatype='integer' name='Value (mg/m3)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gas]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gas</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Standard]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Standard</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value (mg/m3)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value (mg/m3)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value (mg/m3)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D13:no:A1:D13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/Sheet1 (satandard).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;US&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gas</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gas]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gas</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Nitrogen Oxide&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sulphur Oxide&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>12.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>12</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>12.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Standard</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Standard]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Standard</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Current standard&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;New standard&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value (mg/m3)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Value (mg/m3)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value (mg/m3)</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>917.0</statistic>
                <statistic aggregation='Avg' datatype='real'>76.416666666666671</statistic>
                <statistic aggregation='Min' datatype='integer'>10</statistic>
                <statistic aggregation='Max' datatype='integer'>185</statistic>
                <statistic aggregation='Stdev' datatype='real'>58.83483558902735</statistic>
                <statistic aggregation='StdevP' datatype='real'>56.33006647332212</statistic>
                <statistic aggregation='Var' datatype='real'>3461.537878787879</statistic>
                <statistic aggregation='VarP' datatype='real'>3173.0763888888887</statistic>
                <statistic aggregation='Count' datatype='integer'>12</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>108151.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.368146' measure-ordering='alphabetic' measure-percentage='0.422976' parameter-percentage='0.208877' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;US&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='forest_growth_trend' inline='true' name='federated.0bvgn9b1l4a5eu1h2diyr0fwrha9' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='forest_growth_trend' name='textscan.08cxw2l07scw0r1angggf0fbq4j0'>
            <connection class='textscan' directory='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen' filename='forest_growth_trend.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08cxw2l07scw0r1angggf0fbq4j0' name='forest_growth_trend.csv' table='[forest_growth_trend#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='real' name='%area' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[forest_growth_trend.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[forest_growth_trend.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[forest_growth_trend.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%area]</local-name>
            <parent-name>[forest_growth_trend.csv]</parent-name>
            <remote-alias>%area</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[forest_growth_trend.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%Area' datatype='real' name='[%area]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/forest_growth_trend.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>%area</remote-name>
              <remote-type>5</remote-type>
              <local-name>[%area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>%area</remote-alias>
              <ordinal>0</ordinal>
              <family>forest_growth_trend.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1376.5926280199999</statistic>
                <statistic aggregation='Avg' datatype='real'>26.472935154230768</statistic>
                <statistic aggregation='Min' datatype='real'>16.738007620000001</statistic>
                <statistic aggregation='Max' datatype='real'>33.899722539999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.050720170334003</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9825956725083653</statistic>
                <statistic aggregation='Var' datatype='real'>49.712654920354758</statistic>
                <statistic aggregation='VarP' datatype='real'>48.75664232573255</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='real'>33.022308209999998</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38977.792776303664</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>52.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>52.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>2</ordinal>
              <family>forest_growth_trend.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;US&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>forest_growth_trend.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>104130.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2002.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1990</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.5731724644610194</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.5</statistic>
                <statistic aggregation='Var' datatype='real'>57.352941176470587</statistic>
                <statistic aggregation='VarP' datatype='real'>56.25</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='integer'>2003</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>208523250.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.331593' measure-ordering='alphabetic' measure-percentage='0.441253' parameter-percentage='0.227154' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CO2_percapta_trend (2)' inline='true' name='federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CO2_percapta_trend' name='textscan.1esnzt21t57p9n12onby402a8w37 (copy)'>
            <connection class='textscan' directory='C:/Users/amarj/Documents' filename='CO2_percapta_trend.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1esnzt21t57p9n12onby402a8w37 (copy)' name='CO2_percapta_trend.csv' table='[CO2_percapta_trend#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='real' name='CO2PerCapita' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CO2_percapta_trend.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[CO2_percapta_trend.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[CO2_percapta_trend.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[CO2_percapta_trend.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2PerCapita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2PerCapita]</local-name>
            <parent-name>[CO2_percapta_trend.csv]</parent-name>
            <remote-alias>CO2PerCapita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/CO2_percapta_trend (2).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CO2PerCapita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO2PerCapita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2PerCapita</remote-alias>
              <ordinal>0</ordinal>
              <family>CO2_percapta_trend.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>216</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1521.1512957198979</statistic>
                <statistic aggregation='Avg' datatype='real'>7.0423671098143421</statistic>
                <statistic aggregation='Min' datatype='real'>0.29942375886524802</statistic>
                <statistic aggregation='Max' datatype='real'>22.510582127233899</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.2602579334152315</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.2434322840685663</statistic>
                <statistic aggregation='Var' datatype='real'>52.711345259718804</statistic>
                <statistic aggregation='VarP' datatype='real'>52.46731125388677</statistic>
                <statistic aggregation='Count' datatype='integer'>216</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>22045.445084868821</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>216.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>216</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>216.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>2</ordinal>
              <family>CO2_percapta_trend.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>216</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>CO2_percapta_trend.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>54</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1960-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2013-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>216</statistic>
                <statistic aggregation='Median' datatype='date'>#1987-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.334204' measure-ordering='alphabetic' measure-percentage='0.441253' parameter-percentage='0.224543' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (USA_Ren_Energy_Trend)' inline='true' name='federated.0976tf30h3kczb1e9t40g1jk7j6y' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='USA_Ren_Energy_Trend' name='excel-direct.055sspi16zsmtv13z8cs60dun55x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen/USA_Ren_Energy_Trend.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.055sspi16zsmtv13z8cs60dun55x' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E144:no:A1:E144:0' header='yes' outcome='6'>
            <column datatype='string' name='Technology' ordinal='0' />
            <column datatype='string' name='Indicator' ordinal='1' />
            <column datatype='string' name='Country/area' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy|#|#|HHmm|#|#|mmss|#|#|yyMM|#|#|ddMM' name='variable' ordinal='3' />
            <column datatype='real' name='value' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Technology</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Technology]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Technology</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/area]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country/area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E144:no:A1:E144:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country/area]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Technology]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[variable]' peg='0' size='3' />
      </column>
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[variable]' role='dimension' type='quantitative' />
      <column-instance column='[Country/area]' derivation='None' name='[none:Country/area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Technology]' derivation='None' name='[none:Technology:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/Sheet1 (USA_Ren_Energy_Trend).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Year (bin)]' formula='SYS_NUMBIN([variable],3)' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country/area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/area</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>143</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;USA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Electricity generation (GWh)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Electricity generation (GWh)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>143</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Electricity generation (GWh)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>143.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>143</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>143.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Technology</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Technology]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Technology</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bioenergy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wind&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>143</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>120</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15233808.9</statistic>
                <statistic aggregation='Avg' datatype='real'>126948.4075</statistic>
                <statistic aggregation='Min' datatype='real'>11.4</statistic>
                <statistic aggregation='Max' datatype='real'>1060100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>202738.49631950801</statistic>
                <statistic aggregation='StdevP' datatype='real'>201891.98533080184</statistic>
                <statistic aggregation='Var' datatype='real'>41102897889.895157</statistic>
                <statistic aggregation='VarP' datatype='real'>40760373740.812698</statistic>
                <statistic aggregation='Count' datatype='integer'>120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6825152628911.8506</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>variable</remote-name>
              <remote-type>2</remote-type>
              <local-name>[variable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>variable</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>287069.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2007.4755244755245</statistic>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.6479317948381249</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.6316517735575555</statistic>
                <statistic aggregation='Var' datatype='real'>21.603269969467153</statistic>
                <statistic aggregation='VarP' datatype='real'>21.452198151498852</statistic>
                <statistic aggregation='Count' datatype='integer'>143</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>576287059.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year (bin)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95642.0</statistic>
                <statistic aggregation='Avg' datatype='real'>668.82517482517483</statistic>
                <statistic aggregation='Min' datatype='integer'>666</statistic>
                <statistic aggregation='Max' datatype='integer'>672</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5980387861934597</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.592441435243668</statistic>
                <statistic aggregation='Var' datatype='real'>2.5537279621786664</statistic>
                <statistic aggregation='VarP' datatype='real'>2.5358697246809134</statistic>
                <statistic aggregation='Count' datatype='integer'>143</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>63968140.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.441253' measure-ordering='alphabetic' measure-percentage='0.386423' parameter-percentage='0.172324' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Technology:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bioenergy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hydropower&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/area:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='final (2)' inline='true' name='federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final' name='textscan.0t3h8hi01qioa014l60im037kyec (copy)'>
            <connection class='textscan' directory='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen' filename='final.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='FossilFuelConsumption_POPULATIO+ (Multiple Connections)' name='excel-direct.16xy3mw0l8nmrt1eo5xu30d4aglx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/amarj/Documents/Group Project/Latest Dump Naveen/FossilFuelConsumption_POPULATIO+ (Multiple Connections).xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[final.csv].[Country/area]' />
                <expression op='[FossilFuelConsumption_POPULATIO].[Country Name]' />
              </expression>
              <expression op='='>
                <expression op='[final.csv].[variable]' />
                <expression op='[FossilFuelConsumption_POPULATIO].[Year]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.0t3h8hi01qioa014l60im037kyec (copy)' name='final.csv' table='[final#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Technology' ordinal='1' />
              <column datatype='string' name='Indicator' ordinal='2' />
              <column datatype='string' name='Country/area' ordinal='3' />
              <column datatype='date' date-parse-format='yyyy|#|#|HHmm|#|#|mmss|#|#|yyMM|#|#|ddMM' name='variable' ordinal='4' />
              <column datatype='real' name='value' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.16xy3mw0l8nmrt1eo5xu30d4aglx' name='FossilFuelConsumption_POPULATIO' table='[FossilFuelConsumption_POPULATIO$]' type='table'>
            <columns gridOrigin='A1:P10001:no:A1:P2147483647:0' header='yes' outcome='6'>
              <column datatype='string' name='Energy Use Per Capita' ordinal='0' />
              <column datatype='string' name='Capital city' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
              <column datatype='string' name='Country code' ordinal='4' />
              <column datatype='string' name='Country name' ordinal='5' />
              <column datatype='real' name='Fossil Fuel Energy Consumption' ordinal='6' />
              <column datatype='integer' name='Population' ordinal='7' />
              <column datatype='string' name='Income group' ordinal='8' />
              <column datatype='string' name='Lending category' ordinal='9' />
              <column datatype='integer' name='Number of Records' ordinal='10' />
              <column datatype='date' date-parse-format='yyyy|#|#|MMMMddyy|#|#|HHmm|#|#|mmss|#|#|yyMM|#|#|ddMM' name='Year' ordinal='11' />
              <column datatype='real' name='Values' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Series Code' ordinal='14' />
              <column datatype='string' name='Series Name' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[final.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Technology</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Technology]</local-name>
            <parent-name>[final.csv]</parent-name>
            <remote-alias>Technology</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[final.csv]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/area]</local-name>
            <parent-name>[final.csv]</parent-name>
            <remote-alias>Country/area</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>7</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[final.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[final.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Use Per Capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy Use Per Capita]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Energy Use Per Capita</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Capital city]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Capital city</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country name]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Country name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fossil Fuel Energy Consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fossil Fuel Energy Consumption]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Fossil Fuel Energy Consumption</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income group]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Income group</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Lending category]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Lending category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Values]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Values</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series Code]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Series Code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series Name]</local-name>
            <parent-name>[FossilFuelConsumption_POPULATIO]</parent-name>
            <remote-alias>Series Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Capital city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country/area]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='string' name='[Technology]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='date' name='[variable]' role='dimension' type='quantitative' />
      <column-instance column='[Technology]' derivation='None' name='[none:Technology:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/amarj/Documents/My Tableau Repository/Datasources/final (2).tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Capital city]' value='[Extract].[Capital city]' />
            <map key='[Country Code]' value='[Extract].[Country Code]' />
            <map key='[Country Name]' value='[Extract].[Country Name]' />
            <map key='[Country code]' value='[Extract].[Country code1]' />
            <map key='[Country name]' value='[Extract].[Country name1]' />
            <map key='[Country/area]' value='[Extract].[Country/area]' />
            <map key='[Energy Use Per Capita]' value='[Extract].[Energy Use Per Capita]' />
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[Fossil Fuel Energy Consumption]' value='[Extract].[Fossil Fuel Energy Consumption]' />
            <map key='[Income group]' value='[Extract].[Income group]' />
            <map key='[Indicator]' value='[Extract].[Indicator]' />
            <map key='[Lending category]' value='[Extract].[Lending category]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Population]' value='[Extract].[Population]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Series Code]' value='[Extract].[Series Code]' />
            <map key='[Series Name]' value='[Extract].[Series Name]' />
            <map key='[Technology]' value='[Extract].[Technology]' />
            <map key='[Values]' value='[Extract].[Values]' />
            <map key='[Year]' value='[Extract].[Year]' />
            <map key='[value]' value='[Extract].[value]' />
            <map key='[variable]' value='[Extract].[variable]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Capital city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Capital city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Capital city</remote-alias>
              <ordinal>0</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Beijing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Beijing&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Beijing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>1</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CHN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;CHN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;CHN&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>2</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;China&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code1</remote-alias>
              <ordinal>3</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CHN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;CHN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;CHN&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country name1</remote-alias>
              <ordinal>4</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;China&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/area</remote-alias>
              <ordinal>5</ordinal>
              <family>final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;China&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;China&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy Use Per Capita</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Energy Use Per Capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy Use Per Capita</remote-alias>
              <ordinal>6</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1107.31&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;978.619&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>56</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>7</ordinal>
              <family>final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6048.0</statistic>
                <statistic aggregation='Avg' datatype='real'>31.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>63</statistic>
                <statistic aggregation='Stdev' datatype='real'>18.521248586816704</statistic>
                <statistic aggregation='StdevP' datatype='real'>18.472953201911167</statistic>
                <statistic aggregation='Var' datatype='real'>343.03664921465969</statistic>
                <statistic aggregation='VarP' datatype='real'>341.25</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>256032.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Fossil Fuel Energy Consumption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Fossil Fuel Energy Consumption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Fossil Fuel Energy Consumption</remote-alias>
              <ordinal>8</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4775.3175862400012</statistic>
                <statistic aggregation='Avg' datatype='real'>85.27352832571431</statistic>
                <statistic aggregation='Min' datatype='real'>80.32878796</statistic>
                <statistic aggregation='Max' datatype='real'>88.177610189999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.8027344640901566</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.7775973243554613</statistic>
                <statistic aggregation='Var' datatype='real'>7.8553204761987381</statistic>
                <statistic aggregation='VarP' datatype='real'>7.7150468962666183</statistic>
                <statistic aggregation='Count' datatype='integer'>56</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>407640.22208070935</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Income group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Income group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Income group</remote-alias>
              <ordinal>9</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Upper middle income&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Upper middle income&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Upper middle income&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator</remote-alias>
              <ordinal>10</ordinal>
              <family>final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Electricity generation (GWh)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Electricity generation (GWh)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Electricity generation (GWh)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lending category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Lending category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lending category</remote-alias>
              <ordinal>11</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;IBRD&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;IBRD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;IBRD&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>192.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>192.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>13</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>84453240000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>439860625.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1371220000</statistic>
                <statistic aggregation='Stdev' datatype='real'>623969540.68885481</statistic>
                <statistic aggregation='StdevP' datatype='real'>622342498.69999301</statistic>
                <statistic aggregation='Var' datatype='real'>3.8933798770746048e+17</statistic>
                <statistic aggregation='VarP' datatype='real'>3.8731018568815078e+17</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.1151121058179994e+20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Asia &amp; Pacific&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;East Asia &amp; Pacific&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;East Asia &amp; Pacific&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Series Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Series Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Series Code</remote-alias>
              <ordinal>15</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;EG.USE.COMM.FO.ZS&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;SP.POP.TOTL&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Series Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Series Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Series Name</remote-alias>
              <ordinal>16</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Energy use (kg of oil equivalent per capita)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Population, total&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Technology</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Technology]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Technology</remote-alias>
              <ordinal>17</ordinal>
              <family>final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bioenergy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wind&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Values</remote-alias>
              <ordinal>18</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>84453328803.813736</statistic>
                <statistic aggregation='Avg' datatype='real'>479848459.11257803</statistic>
                <statistic aggregation='Min' datatype='real'>80.32878796</statistic>
                <statistic aggregation='Max' datatype='real'>1371220000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>636896093.29039073</statistic>
                <statistic aggregation='StdevP' datatype='real'>635084151.94231236</statistic>
                <statistic aggregation='Var' datatype='real'>4.0563663364856205e+17</statistic>
                <statistic aggregation='VarP' datatype='real'>4.0333188004828614e+17</statistic>
                <statistic aggregation='Count' datatype='integer'>176</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.1151121058193628e+20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>19</ordinal>
              <family>FossilFuelConsumption_POPULATIO</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2000-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='date'>#2008-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>20</ordinal>
              <family>final.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>26806491.899999987</statistic>
                <statistic aggregation='Avg' datatype='real'>148924.95499999993</statistic>
                <statistic aggregation='Min' datatype='real'>11.4</statistic>
                <statistic aggregation='Max' datatype='real'>1060100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>260305.68250078562</statistic>
                <statistic aggregation='StdevP' datatype='real'>259581.60409540415</statistic>
                <statistic aggregation='Var' datatype='real'>67759048342.199814</statistic>
                <statistic aggregation='VarP' datatype='real'>67382609184.743149</statistic>
                <statistic aggregation='Count' datatype='integer'>180</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>16121025253169.127</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>variable</remote-name>
              <remote-type>133</remote-type>
              <local-name>[variable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>variable</remote-alias>
              <ordinal>21</ordinal>
              <family>final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2000-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='Median' datatype='date'>#2008-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.224543' measure-ordering='alphabetic' measure-percentage='0.660574' parameter-percentage='0.114883' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Technology:nk]' palette='summer_10_0' type='palette'>
            <map to='#8fb202'>
              <bucket>&quot;Bioenergy&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Hydropower&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Measure taken by China' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Measure taken by China' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='C02-Emmisions'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-per-country (2)' name='federated.17v36s400fxgdu1dqxug91prayje (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.17v36s400fxgdu1dqxug91prayje (copy)'>
            <column datatype='real' name='[CO2 annual emissions by nation-CDIAC]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CO2 annual emissions by nation-CDIAC]' derivation='None' name='[none:CO2 annual emissions by nation-CDIAC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Year:qk]' included-values='in-range'>
            <min>#2005-01-01#</min>
            <max>#2014-01-01#</max>
          </filter>
          <slices>
            <column>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]</column>
            <column>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:CO2 annual emissions by nation-CDIAC:qk]' scope='rows' value='Annual emissions' />
            <format attr='subtitle' class='0' field='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:CO2 annual emissions by nation-CDIAC:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:CO2 annual emissions by nation-CDIAC:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]' value='Country' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Country : </run>
                <run bold='true'>&lt;[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;CO2 annual emissions :&#9;</run>
                <run bold='true'>&lt;[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:CO2 annual emissions by nation-CDIAC:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year:</run>
                <run bold='true'>&lt;[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Year:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:CO2 annual emissions by nation-CDIAC:qk]</rows>
        <cols>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='China Five Cities Breathable Days'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_date' name='federated.1iuix2807mckp015qce1o0och82t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Safety level standard US' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='35.0'>
              <calculation class='tableau' formula='35.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1iuix2807mckp015qce1o0och82t'>
            <column caption='Safe' datatype='boolean' name='[Calculation_1347139254700331009]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Value] &lt; [Parameters].[Parameter 1]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Site]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Count' name='[cnt:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1347139254700331009]' derivation='None' name='[none:Calculation_1347139254700331009:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iuix2807mckp015qce1o0och82t].[none:Calculation_1347139254700331009:nk]'>
            <groupfilter function='member' level='[none:Calculation_1347139254700331009:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:Date:ok]' to='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1iuix2807mckp015qce1o0och82t].[none:Calculation_1347139254700331009:nk]</column>
            <column>[federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk]' scope='rows' value='Breathable Days' />
            <format attr='subtitle' class='0' field='[federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1iuix2807mckp015qce1o0och82t].[none:Site:nk]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1iuix2807mckp015qce1o0och82t].[none:Calculation_1347139254700331009:nk]' value='false' />
            <format attr='display' field='[federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok]' value='false' />
            <format attr='font-weight' field='[federated.1iuix2807mckp015qce1o0och82t].[none:Site:nk]' value='bold' />
            <format attr='font-weight' field='[federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk]' value='bold' />
            <format attr='color' field='[federated.1iuix2807mckp015qce1o0och82t].[none:Site:nk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000'>In &lt;[federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok]&gt; &lt;[federated.1iuix2807mckp015qce1o0och82t].[none:Site:nk]&gt; has</run>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium'>Æ </run>
                <run bold='true' fontcolor='#59a14f' fontname='Tableau Medium' fontsize='12'>&lt;[federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk]&gt;</run>
                <run fontcolor='#000000'> breathable days</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1534254550933838' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1iuix2807mckp015qce1o0och82t].[none:Calculation_1347139254700331009:nk] * [federated.1iuix2807mckp015qce1o0och82t].[cnt:Value:qk])</rows>
        <cols>([federated.1iuix2807mckp015qce1o0och82t].[none:Site:nk] / [federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='China Investments'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='12'>China&apos;s Investment to curb pollution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (china_investment)' name='federated.01k1ol80q1qpqc1aihak60h1vi0o' />
          </datasources>
          <datasource-dependencies datasource='federated.01k1ol80q1qpqc1aihak60h1vi0o'>
            <column caption='Data' datatype='real' name='[data]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[data]' derivation='Sum' name='[sum:data:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01k1ol80q1qpqc1aihak60h1vi0o].[sum:data:qk]' scope='rows' value='USD (in millions)' />
            <format attr='subtitle' class='0' field='[federated.01k1ol80q1qpqc1aihak60h1vi0o].[sum:data:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01k1ol80q1qpqc1aihak60h1vi0o].[sum:data:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01k1ol80q1qpqc1aihak60h1vi0o].[sum:data:qk]</rows>
        <cols>[federated.01k1ol80q1qpqc1aihak60h1vi0o].[none:year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Image'>
      <table>
        <view>
          <datasources>
            <datasource caption='so-emissions-per-capita-tonnes-per-year (3)' name='federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)'>
            <column caption='InsertImage' datatype='string' name='[Calculation_109212307886563329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;image&quot;' />
            </column>
            <column-instance column='[Calculation_109212307886563329]' derivation='None' name='[none:Calculation_109212307886563329:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='862' />
            <format attr='height' field='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Calculation_109212307886563329:nk]' value='479' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Calculation_109212307886563329:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Images/11111.PNG' />
                <format attr='size' value='3.0828728675842285' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Calculation_109212307886563329:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='PM 2.5-Emission'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (API_EN.ATM.PM25.MC.M3_DS2_en_excel_v2)' name='federated.1ujskas1uvyf981byqaj20rxkqml' />
          </datasources>
          <datasource-dependencies datasource='federated.1ujskas1uvyf981byqaj20rxkqml'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='None' name='[none:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[variable]' derivation='Year-Trunc' name='[tyr:variable:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[variable]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:value:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ujskas1uvyf981byqaj20rxkqml].[tyr:variable:qk]' included-values='in-range'>
            <min>#2005-01-01 00:00:00#</min>
            <max>#2015-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1ujskas1uvyf981byqaj20rxkqml].[none:Country Name:nk]</column>
            <column>[federated.1ujskas1uvyf981byqaj20rxkqml].[tyr:variable:qk]</column>
            <column>[federated.1ujskas1uvyf981byqaj20rxkqml].[none:value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[tyr:variable:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[tyr:variable:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[tyr:variable:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:value:qk]' scope='rows' value='Annual emissions' />
            <format attr='subtitle' class='0' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:value:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:Country Name:nk]' value='Country'>
              <formatted-text>
                <run bold='true'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:Country Name:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
        </panes>
        <rows>[federated.1ujskas1uvyf981byqaj20rxkqml].[none:value:qk]</rows>
        <cols>[federated.1ujskas1uvyf981byqaj20rxkqml].[tyr:variable:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Per Capita CO2 emission'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CO2_percapta_trend (2)' name='federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)'>
            <column datatype='real' name='[CO2PerCapita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2PerCapita]' derivation='Sum' name='[sum:CO2PerCapita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[sum:CO2PerCapita:qk]' scope='rows' value='CO2 emission' />
            <format attr='subtitle' class='0' field='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[sum:CO2PerCapita:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[sum:CO2PerCapita:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[sum:CO2PerCapita:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]' value='Country'>
              <formatted-text>
                <run bold='true'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[sum:CO2PerCapita:qk]</rows>
        <cols>[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Per Capita SO2 emission'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='so-emissions-per-capita-tonnes-per-year (3)' name='federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[SO2 emissions per capita- ClioInfra]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SO2 emissions per capita- ClioInfra]' derivation='Sum' name='[sum:SO2 emissions per capita- ClioInfra:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[sum:SO2 emissions per capita- ClioInfra:qk]' scope='rows' value='SO2 emissions' />
            <format attr='subtitle' class='0' field='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[sum:SO2 emissions per capita- ClioInfra:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[sum:SO2 emissions per capita- ClioInfra:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[sum:SO2 emissions per capita- ClioInfra:qk]</rows>
        <cols>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Per Capita pm2.5 emission'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pm25-concentrations-in-gm3-by-country (3)' name='federated.13k8wle106n3221bh5h480vnxnsx (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.13k8wle106n3221bh5h480vnxnsx (copy 2)'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[PM2.5 concentration- StateofGlobalAir]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PM2.5 concentration- StateofGlobalAir]' derivation='Sum' name='[sum:PM2.5 concentration- StateofGlobalAir:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[sum:PM2.5 concentration- StateofGlobalAir:qk]' scope='rows' value='PM2.5 concentration' />
            <format attr='subtitle' class='0' field='[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[sum:PM2.5 concentration- StateofGlobalAir:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[sum:PM2.5 concentration- StateofGlobalAir:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[sum:PM2.5 concentration- StateofGlobalAir:qk]</rows>
        <cols>[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Pollution Standards Comparision'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (satandard)' name='federated.08bhpgw1a8ulb5157sbp91ghgv77' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08bhpgw1a8ulb5157sbp91ghgv77'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gas]' role='dimension' type='nominal' />
            <column datatype='string' name='[Standard]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value (mg/m3)]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gas]' derivation='None' name='[none:Gas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Standard]' derivation='None' name='[none:Standard:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value (mg/m3)]' derivation='None' name='[none:Value (mg/m3):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]'>
            <groupfilter function='level-members' level='[none:Gas:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]' value='86' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]' value='bold' />
            <format attr='color' field='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]' value='#4e79a7' />
            <format attr='font-weight' field='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Value (mg/m3):qk]' value='bold' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]' value='Country' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]' value='Gas' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Standard:nk]&gt;</run>
                <run fontcolor='#787878'>Æ  </run>
                <run bold='true' fontcolor='#000000'>of industries in</run>
                <run fontcolor='#787878'>Æ  </run>
                <run bold='true'>&lt;[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]&gt; for  &lt;[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]&gt; is </run>
                <run bold='true' fontcolor='#59a14f'>&lt;[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Value (mg/m3):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Value (mg/m3):qk]</rows>
        <cols>([federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk] / ([federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Standard:nk] / [federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Renewable Energy in China'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial' fontsize='12'>Renewable Energy-Mix of China</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final (2)' name='federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)'>
            <column datatype='string' name='[Technology]' role='dimension' type='nominal' />
            <column-instance column='[Technology]' derivation='None' name='[none:Technology:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[variable]' derivation='Year-Trunc' name='[tyr:variable:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='date' name='[variable]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]'>
            <groupfilter function='level-members' level='[none:Technology:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Bioenergy&quot;</bucket>
              <bucket>&quot;Hydropower&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]</column>
            <column>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]' scope='rows' value='Energy Generated (in GWH)' />
            <format attr='subtitle' class='0' field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]' value='Energy Sources'>
              <formatted-text>
                <run>Energy Sources</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[sum:value:qk]</rows>
        <cols>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[tyr:variable:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SO2-Emission'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SO2emission_USA' name='federated.1xrbtjb0gvu7zd15tnxrh1dv53yq' />
          </datasources>
          <datasource-dependencies datasource='federated.1xrbtjb0gvu7zd15tnxrh1dv53yq'>
            <column caption='Country' datatype='string' name='[F3]' role='dimension' type='nominal' />
            <column datatype='integer' name='[SO2 emission]' role='measure' type='quantitative' />
            <column-instance column='[F3]' derivation='None' name='[none:F3:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SO2 emission]' derivation='Sum' name='[sum:SO2 emission:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:year:qk]' included-values='in-range'>
            <min>#2005-01-01#</min>
            <max>#2015-01-01#</max>
          </filter>
          <slices>
            <column>[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[sum:SO2 emission:qk]' scope='rows' value='Annual emissions' />
            <format attr='subtitle' class='0' field='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[sum:SO2 emission:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[sum:SO2 emission:qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:year:qk]' value='54' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:F3:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[sum:SO2 emission:qk]</rows>
        <cols>[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Safe Days of China'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='china_all (2)' name='federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Safety level standard US' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='35.0'>
              <calculation class='tableau' formula='35.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)'>
            <column caption='AVG([Value])-[Safety level standard US]' datatype='real' name='[Calculation_1449596142300360704]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='AVG([Value])-[Parameters].[Parameter 1]' />
            </column>
            <column datatype='datetime' name='[Date (LST)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Site]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date (LST)]' derivation='Day-Trunc' name='[tdy:Date (LST):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1449596142300360704]' derivation='User' name='[usr:Calculation_1449596142300360704:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]'>
            <groupfilter from='&quot;Beijing&quot;' function='range' level='[none:Site:nk]' to='&quot;Shenyang&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' scope='rows' value='Avg. Value of PM 2.5 (in µg/m³)' />
            <format attr='subtitle' class='0' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]' scope='cols' value='Day of Date' />
            <format attr='subtitle' class='0' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]' scope='cols' value='true' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]' value='bold' />
            <format attr='font-size' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='total' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]' value='bold' />
            <format attr='font-size' data-class='total' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]' value='bold' />
            <format attr='color' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]' value='#4e79a7' />
            <format attr='font-weight' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a90c38</color>
                <color>#bb163a</color>
                <color>#ca223c</color>
                <color>#d9303f</color>
                <color>#e44144</color>
                <color>#ee534b</color>
                <color>#f36755</color>
                <color>#f77a64</color>
                <color>#fa8b75</color>
                <color>#fd9b87</color>
                <color>#ffac9b</color>
                <color>#dfd4d1</color>
                <color>#c2c8ce</color>
                <color>#acb8c4</color>
                <color>#98a9b9</color>
                <color>#859aaf</color>
                <color>#738ca5</color>
                <color>#637e9a</color>
                <color>#537290</color>
                <color>#456586</color>
                <color>#385a7b</color>
                <color>#2d4f71</color>
                <color>#234567</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[usr:Calculation_1449596142300360704:qk]' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='2' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]' value='bold' />
            <format attr='font-size' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]' value='10' />
            <format attr='font-size' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' value='9' />
            <format attr='font-weight' field='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[usr:Calculation_1449596142300360704:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='11'>Site:&#9;&lt;[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Day of Date (LST):&#9;</run>
                <run bold='true'>&lt;[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg. Value:&#9;</run>
                <run bold='true'>&lt;[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Safety level standard US:&#9;</run>
                <run bold='true' fontcolor='#e15759'>&lt;[Parameters].[Parameter 1]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]</rows>
        <cols>([federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk] * [federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk])</cols>
      </table>
    </worksheet>
    <worksheet name='USA Energy Mix'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial' fontsize='12'>Renewable energy generated over years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (USA_Ren_Energy_Trend)' name='federated.0976tf30h3kczb1e9t40g1jk7j6y' />
          </datasources>
          <datasource-dependencies datasource='federated.0976tf30h3kczb1e9t40g1jk7j6y'>
            <column datatype='string' name='[Country/area]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/area]' derivation='None' name='[none:Country/area:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[variable]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;USA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]' scope='rows' value='Electricity Generated (in GWH)' />
            <format attr='subtitle' class='0' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]' value='Country' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]' value='10' />
            <format attr='font-size' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]' value='10' />
            <format attr='font-weight' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]' value='bold' />
            <format attr='font-weight' field='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[sum:value:qk]</rows>
        <cols>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]</cols>
        <show-full-range>
          <column>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[Year (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='forest area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial' fontsize='12'>Rise of Forest in China</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='forest_growth_trend' name='federated.0bvgn9b1l4a5eu1h2diyr0fwrha9' />
          </datasources>
          <datasource-dependencies datasource='federated.0bvgn9b1l4a5eu1h2diyr0fwrha9'>
            <column caption='%Area' datatype='real' name='[%area]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[%area]' derivation='Sum' name='[sum:%area:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[sum:%area:qk]' scope='rows' value='Forest Area(in %)' />
            <format attr='subtitle' class='0' field='[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[sum:%area:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[sum:%area:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Forest area for &lt;[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:country:nk]&gt; in &lt;[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:year:qk]&gt;  is </run>
                <run bold='true' fontcolor='#e15759' fontsize='11'>&lt;[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[sum:%area:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[sum:%area:qk]</rows>
        <cols>[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='5 cities breathable days-1'>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_12' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='900' minheight='800' minwidth='900' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88875' id='6' param='horz' type='layout-flow' w='100000' x='0' y='11125'>
            <zone h='88875' id='1' param='vert' type='layout-flow' w='99556' x='0' y='11125'>
              <zone fixed-size='549' h='68625' id='3' is-fixed='true' param='vert' type='layout-flow' w='99556' x='0' y='11125'>
                <zone h='68625' id='4' name='Safe Days of China' w='99556' x='0' y='11125'>
                  <layout-cache minheight='212' minwidth='561' type-h='scalable' type-w='scalable' />
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='11125' id='8' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='28' forceUpdate='true' h='5000' id='9' is-fixed='true' type='text' w='100000' x='0' y='0'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='22'>How safe is China&apos;s air ?</run>
              </formatted-text>
            </zone>
            <zone fixed-size='38' forceUpdate='true' h='5750' id='10' is-fixed='true' type='text' w='100000' x='0' y='5000'>
              <formatted-text>
                <run fontcolor='#222222' fontname='Arial'>An </run>
                <run bold='true' fontcolor='#222222' fontname='Arial'>air quality index</run>
                <run fontcolor='#222222' fontname='Arial'> (AQI) is a number used by government agencies to communicate to the public how polluted the air currently is or how polluted it is forecasted to become</run>
                <run fontcolor='#000000' fontname='Arial'>. The below dashboard shows the AQI for the five major cities of China and considers the safe AQI standard set by the United States, which is 35 µg/m³. </run>
              </formatted-text>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='5 cities breathable days-2'>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_12' value='#000000' />
          <format attr='background-color' id='dash-text_14' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='900' minheight='800' minwidth='900' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='41625' id='7' name='China Five Cities Breathable Days' w='100000' x='0' y='12000' />
          <zone h='4000' id='11' param='vert' type='layout-flow' w='100000' x='0' y='8000'>
            <zone fixed-size='24' forceUpdate='true' h='4000' id='12' is-fixed='true' type='text' w='100000' x='0' y='8000'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>Encouraging results : </run>
                <run fontcolor='#ffffff' fontname='Arial'>This is the reflection on improvement in air quality and more breathable days in the major cities</run>
              </formatted-text>
            </zone>
          </zone>
          <zone fixed-size='28' forceUpdate='true' h='8000' id='9' is-fixed='true' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='22'>Let&apos;s revisit the five cities</run>
            </formatted-text>
          </zone>
          <zone h='46375' id='13' param='vert' type='layout-flow' w='100000' x='0' y='53625'>
            <zone fixed-size='48' forceUpdate='true' h='7000' id='14' is-fixed='true' type='text' w='100000' x='0' y='53625'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial' fontsize='20'>CONCLUSION</run>
              </formatted-text>
            </zone>
            <zone fixed-size='196' forceUpdate='true' h='25500' id='15' is-fixed='true' type='text' w='100000' x='0' y='60625'>
              <formatted-text>
                <run fontcolor='#000000' fontname='Arial' fontsize='10'>In absolute terms, China is the biggest polluter of world, however the fundamental reason for China’s pollution is its large population. If we look at per capita figures, U.S. is contributing more pollution than China. The effort of China in imposing strict standards for manufacturing industry, increasing its forest area, and renewable energy generation is commendable</run>
                <run fontcolor='#000000' fontname='Arial'>. &#10;  </run>
                <run bold='true' fontalignment='1' fontcolor='#499894' fontname='Arial' fontsize='15'>&#10;Therefore, we feel China should not be solely blamed to pollute the world, and hence they are NOT the real culprit</run>
                <run fontalignment='1' fontcolor='#000000' fontname='Arial' fontsize='15'>. </run>
              </formatted-text>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Absolute Value'>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_13' value='#000000' />
          <format attr='background-color' id='dash-text_14' value='#000000' />
          <format attr='background-color' id='dash-text_15' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='900' minheight='800' minwidth='900' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='152' h='100000' id='1' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='93' h='11625' id='10' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                  <zone forceUpdate='true' h='5625' id='11' type='text' w='100000' x='0' y='0'>
                    <formatted-text>
                      <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='22'>China: The biggest Polluter </run>
                    </formatted-text>
                  </zone>
                  <zone fixed-size='34' forceUpdate='true' h='5250' id='12' is-fixed='true' type='text' w='100000' x='0' y='5625'>
                    <formatted-text>
                      <run fontcolor='#000000' fontname='Arial'>China’s remarkable economic rise over the past 30 years has come at an alarming price in environmental terms. China is the largest polluter of the world, with 16 of the world&apos;s 20 most polluted places being in China.</run>
                    </formatted-text>
                  </zone>
                </zone>
                <zone fixed-size='24' h='4000' id='19' is-fixed='true' name='C02-Emmisions' pane-specification-id='0' param='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]' type='color' w='100000' x='0' y='11625' />
                <zone fixed-size='24' forceUpdate='true' h='4000' id='13' is-fixed='true' type='text' w='100000' x='0' y='15625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>CO2 emission </run>
                    <run fontcolor='#ffffff' fontname='Arial'>(in 1000 tonnes)</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='222' h='23958' id='3' is-fixed='true' name='C02-Emmisions' w='100000' x='0' y='19625'>
                  <layout-cache minheight='170' minwidth='159' type-h='scalable' type-w='scalable' />
                </zone>
                <zone fixed-size='24' forceUpdate='true' h='4000' id='14' is-fixed='true' type='text' w='100000' x='0' y='43583'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>SO2 emission </run>
                    <run fontcolor='#ffffff' fontname='Arial'>(in 1000 tonnes)</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='198' h='23958' id='7' is-fixed='true' name='SO2-Emission' w='100000' x='0' y='47583'>
                  <layout-cache minheight='169' minwidth='159' type-h='scalable' type-w='scalable' />
                </zone>
                <zone fixed-size='24' forceUpdate='true' h='4000' id='15' is-fixed='true' type='text' w='100000' x='0' y='71541'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>PM2.5 emission</run>
                    <run fontcolor='#ffffff' fontname='Arial'> (in micograms per cubic meter)</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='199' h='24459' id='9' is-fixed='true' name='PM 2.5-Emission' w='100000' x='0' y='75541'>
                  <layout-cache minheight='170' minwidth='152' type-h='scalable' type-w='scalable' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Measure taken by China'>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_18' value='#000000' />
          <format attr='background-color' id='dash-text_28' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='900' minheight='800' minwidth='900' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (satandard)' name='federated.08bhpgw1a8ulb5157sbp91ghgv77' />
      </datasources>
      <datasource-dependencies datasource='federated.08bhpgw1a8ulb5157sbp91ghgv77'>
        <column datatype='string' name='[Gas]' role='dimension' type='nominal' />
        <column-instance column='[Gas]' derivation='None' name='[none:Gas:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='46' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='44' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='38' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='852' h='100000' id='36' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                  <zone h='100000' id='31' param='horz' type='layout-flow' w='99556' x='0' y='0'>
                    <zone h='100000' id='25' param='horz' type='layout-flow' w='99556' x='0' y='0'>
                      <zone h='100000' id='23' type='layout-basic' w='99556' x='0' y='0'>
                        <zone h='4000' id='17' param='vert' type='layout-flow' w='99556' x='0' y='12000'>
                          <zone fixed-size='48' forceUpdate='true' h='4000' id='18' is-fixed='true' type='text' w='99556' x='0' y='12000'>
                            <formatted-text>
                              <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>Strict Regulation:</run>
                              <run bold='true' fontcolor='#ffffff' fontname='Arial'>Æ </run>
                              <run fontcolor='#ffffff' fontname='Arial'>China has implemented stricter standards on conventional air pollutants, that has to be adhered by industries starting 2014</run>
                              <run fontcolor='#ffffff' fontname='Arial' fontsize='10'>.</run>
                            </formatted-text>
                          </zone>
                        </zone>
                        <zone h='34250' id='4' name='Pollution Standards Comparision' w='99556' x='0' y='20000'>
                          <layout-cache cell-count-w='12' minheight='225' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                        </zone>
                        <zone h='5750' id='19' param='vert' type='layout-flow' w='99556' x='0' y='0'>
                          <zone fixed-size='31' forceUpdate='true' h='5375' id='20' is-fixed='true' type='text' w='99556' x='0' y='0'>
                            <formatted-text>
                              <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='22'>Aggresive pollution control continues in China</run>
                            </formatted-text>
                          </zone>
                        </zone>
                        <zone forceUpdate='true' h='6250' id='22' type='text' w='99556' x='0' y='5750'>
                          <formatted-text>
                            <run fontcolor='#000000' fontname='Arial'>The Chinese government is working meticulously to reduce the growing criticism for allowing the country’s air to degrade to abysmal levels. It has set strict environmental regulations and the recent effort to curb pollution is commendable.</run>
                          </formatted-text>
                        </zone>
                        <zone h='4875' id='27' param='vert' type='layout-flow' w='99556' x='0' y='54250'>
                          <zone fixed-size='26' forceUpdate='true' h='4250' id='28' is-fixed='true' type='text' w='99556' x='0' y='54250'>
                            <formatted-text>
                              <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>More Investment:</run>
                              <run fontcolor='#ffffff' fontname='Arial'> China continues to invest more on curbing pollution, that includes increase in the forest area</run>
                            </formatted-text>
                          </zone>
                        </zone>
                        <zone fixed-size='332' h='40875' id='41' is-fixed='true' name='China Investments' w='49779' x='0' y='59125'>
                          <layout-cache minheight='170' type-h='scalable' type-w='fixed' />
                        </zone>
                        <zone h='40875' id='42' name='forest area' w='49777' x='49779' y='59125' />
                        <zone h='4000' id='49' param='horz' type='layout-flow' w='49778' x='0' y='16000'>
                          <zone h='4000' id='47' name='Pollution Standards Comparision' pane-specification-id='0' param='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]' type='color' w='49778' x='0' y='16000' />
                        </zone>
                        <zone h='4000' id='26' mode='checkdropdown' name='Pollution Standards Comparision' param='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]' type='filter' w='49778' x='49778' y='16000' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Per Capita Value'>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_15' value='#000000' />
          <format attr='background-color' id='dash-text_16' value='#000000' />
          <format attr='background-color' id='dash-text_17' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='900' minheight='800' minwidth='900' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='7' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='1' param='vert' type='layout-flow' w='99556' x='0' y='0'>
                <zone h='6875' id='12' param='vert' type='layout-flow' w='99556' x='0' y='0'>
                  <zone forceUpdate='true' h='5375' id='13' type='text' w='99556' x='0' y='0'>
                    <formatted-text>
                      <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='20'>The equation changes when per capita emission is considered</run>
                    </formatted-text>
                  </zone>
                </zone>
                <zone fixed-size='36' forceUpdate='true' h='5500' id='14' is-fixed='true' type='text' w='99556' x='0' y='6875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Arial'>Looking at a country&apos;s total carbon emissions does not tell the full story of its contribution in global warming. A more useful measurement is the emissions per capita (person). Under this measurement, an average American is responsible for 19.8 tonnes per person, while an average Chinese citizen is responsible for 4.6 tonnes.</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='24' h='4000' id='20' is-fixed='true' leg-item-layout='horz' name='Per Capita CO2 emission' pane-specification-id='0' param='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]' type='color' w='99556' x='0' y='12375' />
                <zone h='83125' id='3' param='vert' type='layout-flow' w='99556' x='0' y='16375'>
                  <zone h='83125' id='4' param='vert' type='layout-flow' w='99556' x='0' y='16375'>
                    <zone fixed-size='24' forceUpdate='true' h='4000' id='15' is-fixed='true' type='text' w='99556' x='0' y='16375'>
                      <formatted-text>
                        <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>Per capita CO2 emission</run>
                        <run fontcolor='#ffffff' fontname='Arial'> (in tonnes/year)</run>
                      </formatted-text>
                    </zone>
                    <zone fixed-size='190' h='24750' id='5' is-fixed='true' name='Per Capita CO2 emission' w='99556' x='0' y='20375'>
                      <layout-cache minheight='170' minwidth='152' type-h='scalable' type-w='scalable' />
                    </zone>
                    <zone fixed-size='24' forceUpdate='true' h='4000' id='16' is-fixed='true' type='text' w='99556' x='0' y='45125'>
                      <formatted-text>
                        <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>Per capita SO2 emission</run>
                        <run fontcolor='#ffffff' fontname='Arial'> (in tonnes/year)</run>
                      </formatted-text>
                    </zone>
                    <zone fixed-size='178' h='23250' id='11' is-fixed='true' name='Per Capita SO2 emission' w='99556' x='0' y='49125'>
                      <layout-cache minheight='175' type-h='scalable' type-w='cell' />
                    </zone>
                    <zone fixed-size='20' forceUpdate='true' h='3500' id='17' is-fixed='true' type='text' w='99556' x='0' y='72375'>
                      <formatted-text>
                        <run bold='true' fontcolor='#ffffff' fontname='Arial' fontsize='10'>Per capita PM2.5 emission</run>
                        <run fontcolor='#ffffff' fontname='Arial'>(in mg/cubicmeter/year)</run>
                      </formatted-text>
                    </zone>
                    <zone h='23625' id='9' name='Per Capita pm2.5 emission' w='99556' x='0' y='75875'>
                      <layout-cache minheight='156' type-h='scalable' type-w='cell' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Renewable Energy'>
      <style />
      <size maxheight='800' maxwidth='900' minheight='800' minwidth='900' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='87206' id='10' param='horz' type='layout-flow' w='86000' x='0' y='12794'>
            <zone h='87206' id='6' param='horz' type='layout-flow' w='86000' x='0' y='12794'>
              <zone h='87206' id='1' param='vert' type='layout-flow' w='86000' x='0' y='12794'>
                <zone fixed-size='610' h='76250' id='3' is-fixed='true' param='vert' type='layout-flow' w='86000' x='0' y='12794'>
                  <zone fixed-size='255' h='32875' id='4' is-fixed='true' name='USA Energy Mix' w='86000' x='0' y='12794'>
                    <layout-cache minheight='163' minwidth='175' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='43375' id='8' name='Renewable Energy in China' w='86000' x='0' y='45669'>
                    <layout-cache minheight='188' minwidth='175' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='87206' id='13' param='horz' type='layout-flow' w='14000' x='86000' y='12794'>
            <zone h='87206' id='14' param='vert' type='layout-flow' w='14000' x='86000' y='12794'>
              <zone fixed-size='267' h='34375' id='15' is-fixed='true' name='USA Energy Mix' pane-specification-id='0' param='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]' type='color' w='14000' x='86000' y='12794' />
            </zone>
          </zone>
          <zone h='12794' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone forceUpdate='true' h='6000' id='17' type='text' w='100000' x='0' y='0'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='24'>China’s increasing contribution in renewable energy</run>
              </formatted-text>
            </zone>
            <zone fixed-size='42' forceUpdate='true' h='6250' id='18' is-fixed='true' type='text' w='100000' x='0' y='6000'>
              <formatted-text>
                <run fontcolor='#000000' fontname='Arial'>China has increased its renewable energy not only to reduce carbon emission, but also to establish itself as the leading player in clean enegry and will invest $361 billion in renewable power generation by 2020. In 2016, 34% of China&apos;s energy demand was met by renewable energy sources as compared to only 16% of USA.</run>
              </formatted-text>
            </zone>
          </zone>
        </zone>
        <zone h='47000' id='11' name='Renewable Energy in China' pane-specification-id='0' param='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]' type='color' w='12889' x='86333' y='47250' />
      </zones>
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Segoe UI Light' fontsize='22'>Blame game of air pollution</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5291' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5291' />
            <zone h='82987' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16598'>
              <flipboard active-id='10' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Is China the real culprit' captured-sheet='Image' id='1' />
                  <story-point caption='China- The biggest Polluter' captured-sheet='Absolute Value' id='2'>
                    <capturedDeltas>
                      <dashboard name='Absolute Value'>
                        <zone id='12'>
                          <formatted-text>
                            <run fontcolor='#000000' fontname='Arial'>China’s remarkable economic rise over the past 30 years has come at an alarming price in environmental terms. China is the largest polluter of the world, with 16 of the world&apos;s 20 most polluted places being in China.</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='How safe is China&apos;s air' captured-sheet='5 cities breathable days-1' id='6'>
                    <capturedDeltas>
                      <worksheet name='Safe Days of China'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <fields>
                                  <field>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;Beijing&quot;</bucket>
                                </multibucket>
                                <axis>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[tdy:Date (LST):qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Per capita emission' captured-sheet='Per Capita Value' id='7'>
                    <capturedDeltas>
                      <dashboard name='Per Capita Value'>
                        <zone id='14'>
                          <formatted-text>
                            <run fontcolor='#000000' fontname='Arial'>Looking at a country&apos;s total carbon emissions does not tell the full story of its contribution in global warming. A more useful measurement is the emissions per capita (person). Under this measurement, an average American is responsible for 19.8 tonnes per person, while an average Chinese citizen is responsible for 4.6 tonnes.</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Measures taken by China to curb pollution' captured-sheet='Measure taken by China' id='8'>
                    <capturedDeltas>
                      <worksheet name='Pollution Standards Comparision'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Renewable energy trend' captured-sheet='Renewable Energy' id='9' />
                  <story-point caption='Let&apos;s revisit the 5 cities' captured-sheet='5 cities breathable days-2' id='10'>
                    <currentDeltas>
                      <dashboard name='5 cities breathable days-2'>
                        <zone id='15'>
                          <formatted-text>
                            <run fontcolor='#000000' fontname='Arial' fontsize='10'>In absolute terms, China is the biggest polluter of world, however the fundamental reason for China’s pollution is its large population. If we look at per capita figures, U.S. is contributing more pollution than China. The effort of China in imposing strict standards for manufacturing industries, increasing its forest area, and renewable energy generation is commendable</run>
                            <run fontcolor='#000000' fontname='Arial'>. &#10;  </run>
                            <run bold='true' fontalignment='1' fontcolor='#499894' fontname='Arial' fontsize='15'>&#10;Therefore, we feel China should not be solely blamed to pollute the world, and hence they are NOT the real culprit</run>
                            <run fontalignment='1' fontcolor='#000000' fontname='Arial' fontsize='15'>. </run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='102'>
    <window class='dashboard' name='Renewable Energy'>
      <viewpoints>
        <viewpoint name='Renewable Energy in China'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='USA Energy Mix'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='5 cities breathable days-2'>
      <viewpoints>
        <viewpoint name='China Five Cities Breathable Days'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
    <window class='dashboard' name='5 cities breathable days-1'>
      <viewpoints>
        <viewpoint name='Safe Days of China'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Absolute Value'>
      <viewpoints>
        <viewpoint name='C02-Emmisions'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='PM 2.5-Emission'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SO2-Emission'>
          <zoom type='entire-view' />
          <highlight field='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:F3:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Measure taken by China'>
      <viewpoints>
        <viewpoint name='China Investments'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pollution Standards Comparision'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='forest area'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='42' />
    </window>
    <window class='dashboard' name='Per Capita Value'>
      <viewpoints>
        <viewpoint name='Per Capita CO2 emission'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Per Capita SO2 emission'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Per Capita pm2.5 emission'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Story' tab-color='#f66273'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='C02-Emmisions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Entity:nk]</field>
            <field>[federated.17v36s400fxgdu1dqxug91prayje (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='China Five Cities Breathable Days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuix2807mckp015qce1o0och82t].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='China Investments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.01k1ol80q1qpqc1aihak60h1vi0o].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Image'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Calculation_109212307886563329:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PM 2.5-Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ujskas1uvyf981byqaj20rxkqml].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ujskas1uvyf981byqaj20rxkqml].[none:Country Name:nk]</field>
            <field>[federated.1ujskas1uvyf981byqaj20rxkqml].[yr:variable:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Per Capita CO2 emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:country:nk]</field>
            <field>[federated.018r5gf0bl2u0e1g9rxsr1xwhdq8 (copy)].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Per Capita SO2 emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[sum:SO2 emissions per capita- ClioInfra:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Entity:nk]</field>
            <field>[federated.1nj6yqm0kkcj4z1ai92dr0maur5v (copy 2)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Per Capita pm2.5 emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Entity:nk]</field>
            <field>[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[none:Year:qk]</field>
            <field>[federated.13k8wle106n3221bh5h480vnxnsx (copy 2)].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Pollution Standards Comparision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Country:nk]</field>
            <field>[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Gas:nk]</field>
            <field>[federated.08bhpgw1a8ulb5157sbp91ghgv77].[none:Standard:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Renewable Energy in China'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[none:Technology:nk]</field>
            <field>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[tyr:variable:ok]</field>
            <field>[federated.0ri9t4t1hxc2rf185mlja1v0vjb5 (copy)].[yr:variable:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='SO2-Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:F3:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:F3:nk]</field>
            <field>[federated.1xrbtjb0gvu7zd15tnxrh1dv53yq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Safe Days of China'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[usr:Calculation_1449596142300360704:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[avg:Value:qk]</field>
            <field>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[none:Site:nk]</field>
            <field>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[usr:Calculation_1449596142300360704:qk]</field>
            <field>[federated.1kr7fye0h9vwm710bf4sq0vq0q5m (copy)].[yr:Date (LST):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='USA Energy Mix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Country/area:nk]</field>
            <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Indicator:nk]</field>
            <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:Technology:nk]</field>
            <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[none:variable:qk]</field>
            <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[tyr:variable:ok]</field>
            <field>[federated.0976tf30h3kczb1e9t40g1jk7j6y].[tyr:variable:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='forest area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:country:nk]</field>
            <field>[federated.0bvgn9b1l4a5eu1h2diyr0fwrha9].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='5 cities breathable days-1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z5Qc13Wo+52q6jwz3T05AZgZ5EgiECAgBjCAlETSFJWDJdGWni3rvmX7
      XoerdeVry77B8tPSe5Ylv/sky7J8rWhSEsUcRBIEQIDIeXLC5J6ZzrkrnPejhgOMZkAAxAxA
      Ef2tNQvo06dO7aqufcLeZ+8SUkpJkSI3KMr1FqBIkevJDAU4cXg/sYwOQH9XK/0jE/N/Rmly
      4vABOvuHL1JBZ//u/eiXaGakv4s9+/aTytk1W08cZiKWmf4+GQ5x9HTHZQiks3/3bjKXOuGb
      mHn27j2IeZGvM4kIe/buJRRJXGaDRa4nMxTgjz/3YU4M2j/c97/53/n+U3vm/YQHnv5XPvi5
      /8iZ9p6L1NA5sPvAWyrAd//uz7jp1rv40n/8IstWb6J/MsN//+PPsefE4HSdVCTEsTOXowAZ
      Pn7fvYykL/MCrDz79h3EmuOrxGgnt26/nWefe557b7uF/a1Dl9lokevFrCnQiUOvs3v3bvqH
      QgAceeUX3LJ5E1s2b+Zr332cb/zF7/OX3/wJP/3WX1F/073osV4almwkP7WS+ME3v8KWrdtZ
      u3Ydz+4/y0v//m1uunkjK1as4MfPH+Tvv/ENEhMjmEh+72MPsOM9O/jQ7/wJxvRKJMvX//rr
      JJNj7Lr9Vm7ffgt3f+DzFKa+t9IjfOlvvsMrR8+y//AJ/vnr/wXFyAPwT1//C1Yva+Fr3/sF
      o92n+O6Pn+TYcz+gZfUG3n/fnay8eSexgsEXP3of23bsYO3G25jMlvJX//AtShJn2bF1M7du
      3sgn//Cvp+9HITHKzu2buXXLzez65B+CkeCrX/0H9OwQ1cEadu3cyf6z9mhmaSX88OdP8j//
      +i9Y01jG8dbuhfnViswb2q8XfP9b/xcBj0Z/dxuP3g9/+aX/xFf+v1e4b7WTxYu28fTT3+aL
      f/s4IWcPYnKIf/vZM9z6vodwCfv4YwcPEKhr4gPbNrJpTQtla6v5qreBH/6vr/Hq7gM8+uhn
      ye4OcXNJlP/z0Dn+4LMf5off+Xv2tX2JnWuqpuXIREc53T3Cpx79LJtu2YFjqv18dIywq5YV
      DX4AHvjgJ6aP+fjv/RmL80f5ymO/4p5Ht0+Xu6pW8uyL/86W5hLahjP8hy//T/r7+vjC7/42
      rUNxPveFL9C+/0nOjad49DMfZ9ud75s+1lFaw9997ev0nT3EJ770XXL8+fR3+YTB9597hQaP
      3Y8EquoJVMEXP3o3Vds/zRc+tPPqf6EiC8qsEeDv//cv2b17N49+8B67YNpIJAFByy13k+vc
      wyudWf74d3bxla98jQcfenD6+C/97T/wmQ/ex8l9z/Cnf/1/85U/epR97ZOsW7UMh8M5Xc+0
      TFylFezcuZN/+tETrK33zZCjtHE9P/23b7Ok0sOf/h8f58RwCgBPdQtLxShPvHyMbGKSh+66
      hWcOtNvHlPpRFJV8Nj+jrbKAHxCoqkZ6spf3f+DTVC9dR2WJhtvpAGD5LffzL//4VfyOAp95
      5IOEp+ZgnQef4/P/+e+4aeNGcDpwXNhwSZCg59dvocHqbb/F1//6D1HFJe9/kevMJa1Af/k/
      vsbffPEjbL/zYf706/9A0OnhgTvW0XzzbTyw616GIzoP3L1luv7j//s7fP3/+Ra9Y0kevP8e
      Fjc18+/f+wZ7TnQyNjE6XW/ljvdxd4vGf/7yX/DVf/g+Xp97xnmToX7+65e/zOO/fJaVW+9n
      WdWUgjgD/OAn3+OvPv8gpVWL8Czdyb1bV13+BTt91Ht1/vxP/hMFdyWjo/ZUb7jzKP/lL77C
      U8/vZucjHyUw9aSXBipJDZ3lT//Ht6lXk4xnLrb8fROdb/z9ty66SC7yzkIU/QBFbmSKfoAi
      NzRFBShyQ1NUgCI3NDMUYHJyco4qJqHQW3uEQ6FhQqFJ0unsBWWhC5rIE5qIzTounU4TnZzE
      kBAa6mNwbJJYPEYqnQZ04rHUZV9ILD67/YsRiUTQswlS+flZqlp6lmT20q7kRCw+a3GcSLx9
      j3EsFr9QChKJ5JztZhMJJmfU/XXse52IxYlccB8v656aeQYGxqauyySZOO9RjEQigMnk6DBz
      3Z657sfFSCWSRC64htjFrsfME0tk5/7uAmLxGPFYbKYf4NieZ6lffhOHj53hvR/8GOHONzh1
      bpKgkWDS2cjH7l7Nz554Dt3SqKipJFDZQFtbB15HDCWWoy9lsnLZCrbvup/W06fZ/fJzBCpr
      SYYGGE9reFwOGhqqCWfhEw/vpL21h0LqHM7KZiZG46gyheLzEPB42bx5Ja88/zL1K5azbdNK
      9r/4LGXLd5AaPE28oFJTHSQ1epaukIIrUIY7P0FVYwvZyRCZgoM1t95KfmIUiWBivI9AoJ6B
      iSi1QSf9I2Heu7Gex/YP0bJ0KYsrfSyqcPPk869SsWQtlp6mqlQjNJYgKzRKHDlyBYm/3Eeo
      bYCs08XSFavIZLLkEyMohSTasntYGyhwsmsYn5pFN0wSaR2npxSHw0mJo0Ayp+APOLFMk/BY
      grsffJCnn3+Oxgo/vqom6ksEHRMZlFQIS8/SN67jCpTR4LMIx7L4PRZlVUsYHE/jc6kE3TnG
      U06aGoOMjQ4yMTqJq8TP7fc/xEsXtKsPdHEqlqa5cREemcZTuQRPPkrbaJymphqcMsrB3V1o
      /nJW31RPbCjGLXfvYt/LzxKoqicxPoHlr6fSK/D7A4hsgrbROPWVHsx8nAOHI9x5/00oyRE6
      2mO4gyVU11TR3TvIJx/ZzmP/8m9oi9axfnUdmYzB3bdt5rXnniai1uCSYe669yGO7HuRhOli
      UU2A8aEBsrrEHwjgUA36OoeIGypVdZUsry3FV72aTGSYIyOdrN/xfsZ7TjGeskgnJnjo3i38
      9F+foXnDWjKZLEtrHEyOZ1iy+U56j7yIx19OdHSMkOlmZXnh/AiQGGklpjXQcew16uormEzq
      vHHoKKGxQUYHz1ESqKKQjhOJRJmYnOSNAwd4dd9BQqExwCBXgPrmFezb/wZ1JRrj4+OYwklk
      uJNQJEEqOsGptk5S8RjDY+MgDfRMjL6QzkB/L4XkCGfb+5CAZVmAQSGd5dSZNjCy7N1/gNBY
      BMNS8WoKPe1n6O/vo7w0gPD6UIRCPDrB0cPHGY1lWdRQRWR8mFNtXSTGh+jo7KG1tYtIPIbD
      afsjpJ7FyqeYyEqyiQiJRIKR8QjxWJL2EyfwlDppbe1C8ZbiD5ShGAnqystxaIL2rl66+gcp
      CdahqQYKko6zJzjV2kU4EmN8tJ/jp1vJFAReTSEcjhCLROnpOsvgWIyhc+2kdYuA308kGiEW
      ixONhDEsi0g0QnhscPrahMtLdUUV2dQEB1/fR7Jg34PQUD/pvMGxwwfoC8XQCnGOn25FN2a2
      6w/48ZRW4FAkZ08dJRLPkIjHyCRTnOvvobt/GCEk8XiSeHiUcDyLZVoEqutRcmEiiSSOVJKO
      c/0UFO/0sePRCLG43RMP9nUxHElBJsqps61MhGM4NQeuEj8eTdBUFaSjp4eegREoJNj7xkG6
      ugZx+MrwOAThSJhcdIIDx8/i9pURDPgZ6T7DSChEY109WUMB4aC36xwNDeXEY1HCo8OEE3ki
      kSjxWIyyYAABrF7exNnOARLxOL09I4TSORZXeYjH4ySjISKJJLFoCoQAeYUUEmOytW9szu+y
      ibA8drr9stsKjYVmfDZ0XVpSyrGxudtfCAa6O2RGt6SRS8m9e/bJnHH1bbafPir7h8evvqEF
      ZLD/nCxch2Ovlo6Ojrd97Ln+vlll6le+8pWvAOTDvbx0bIBFlR7OjUQw0hEKUuXcwBBWIcXg
      0CiW6mJ0bJyVy5oQwPM/+l90p0xO7z3BkuWL6e4f4aZ1K/nVU09SUtNIX1cHg0P9yEKWWLxA
      xsxj5PJ4PC6OvPw4IVlOMpEgMT5If+s5hgtpeltP4AvUMjHUh7vEx6kzHRjZKOFYklcPHmJV
      y2JOnGqjq/MUluJjcrifAir5bJZcNkF7Vz91tRU89cRPaD12jiXLF9Pe0UNNdSXnOk/SPZZm
      sOMEx4+fIhSLs2HDOn7wL9/H6/WyZEkz4XicI6+/RHd/L5onSGigl9KKal575kf0jsUJBv1E
      o1HGwgkqAh5OHj7JZDyOW7PoHpogHg+TL0gCHoWUrqKnJhge6OWZV/agOp1Ex0Zwuhz0Doao
      qgjQcfY0wx1n6E0KIufaOHHiDIPDYxRMmBjppX9oklK3oHtoguqKAGdOHEFH49zAIIqe5tUD
      h1mxtJmzZ1tRrRzRTIGeM624vC76h8aJxcK0H3iOmFpJIpFgbGiA8MQotYuXse+lJ2ZdZ2Ji
      iFCiwFBPG4PtZ2kbjWGakopAGYd3P4vhb6Tz2H46+oaJxiM01tVy8vhJTh3fj+pwE0tn6Wtr
      pyRQxuOP/ZJguZdoMstQ/wix8Q7a+3OUODKEEgVCA730njqNWV7L6QMvYgknKAoFS+WZ55+m
      t6uVYM1iers6qa6pZu/rr1MlLIYyBrFogq5jr9ATV0hFowg9xasHDtNU4eLnL+zlXNtRBtMq
      kYlx3jj8Bj4NSiuq6ejopbaminwqwng4c34NYOXT6LFB/vYf32Blcw3V/hKc6QQpt48jJlQq
      Bp1HX+Bc0odV2sDqhlKa62tgxXLaOzr5+n/7R3w1pSxeuZJYusCr//Y1ujNleKsbaAmEyI62
      Mm4GqVm5lgdXuemJSM71ncBTSLGquYyRtjGs5iUIM0ss9Rpk4OVnX2DM1Fi5diluaYIQ5KJD
      HDvZhTeokj77KnpKpfXMEwRbWlhaDuciHtbctA6vSyUVi8yQ6+jRkyRMN5WlJWxc4uEHx85x
      x63bWNzgoL2tk5/908949Kt/iXB4yGaztB9+ilOnxth6vxPpLYf8GN/71l5KaurRnG6WN+2i
      5/BBzhXyVDVtIDoyQMDqxVu/gccHCnzljz7BM8++yqpyg1BWY6x3P8cPDxNcvIya6ipWN5fQ
      1tbJuaMdfPC/3sOJ3Wd439138NgvXiaTyhAdfB3Tt5TOwUVEhgdYu/QjnDm4l6M9knV3rCQo
      dQQW4Y59jGUbaT14FKcaQ04ovH68nyVLKon1vIqrZjWnH3+Kpjo/5YESvEoSS6uZ8zr9hInm
      s4RaTzE65kJtKKG/q4vlTR/lbGcPA5E4HvdirEyYUNQCI0XrsaPIihq0ztMMhAYIGKU89sQ+
      1t+ylFOtp5kIDVDpXoRJHkeJhwExSTQ1wZHXz+Kwgnz63nsZiSSIpg8z1DvOp/7gi3i8XrKp
      NE99778xZtTirFlGOBKlMudkz9lhGsqdGKEeTp4KE3QK6hdX4MHCtBScqsAlDLp7Bhga6WL7
      htU89cyTBEqD5Lw1rN+wGk1k+cVjPz+vAFppNZpjnM98eBehiThBt8QUleTDWXa01KNJiWks
      o6x/ELfIAqVUNK0Gj4f127axdINOX2gcnwo1lSVU3PwJ/N2dVDYtQ8uEcW34BHp6EqcziK+h
      nnL3IIGqajQUfFqGNduaKanzE58YRvNUkBvvo+GuexgeHqdlzTJcuSTDcR2h+aivr6K5pR4n
      JiO9nXzidz/N5Og43qAffWAcDaiqa6K5KXCBXJK1m7ejSBPTzLP/TAe7blkLQPOKrQx2dfDe
      T36EoFthSX0dOc2HV7Pw+bpZvKQOI20vl0rLFtFYE6R7NAl4uPm221li5MkbCkl3gVShHIdU
      +Oj9GxFCsLxpEZORSbatChAsL2O71o3DX4uFBlo5wVIHSz/6MGUO2LhqOa++fpyNm2/GqUCq
      xoHLX0c4nqPW7wFUKhcvZ9fSSha1VCPSMSazEGxaTuFXr9OyaDGKswX/UjeV41FUr4eVzR+h
      u6OTh9/7HtLpHPW15UwOdhIsL8Flzr7OfDiH8JViLl7OkuUV+BeVMzGRxMxEuO29n8LITpCJ
      jtE9JNjQ3IKUKsH6Burqa0il0qxcXUmNr4KW9Tm6hseoCvgoL6+kxt/E8OAJaprrENlxRGkF
      27dreMvqyEczNNfVopVWkctqlDkEdVXV+JpLsFY20d09SJ3fiXN5E92jMXZtXYZUwWqsoCYF
      0VSGltpSIllw+krwuR00NmxEH56gpmwN1VVV1G7bjoGDcNait7eX5S0t3L7zzuJWiCI3NkVH
      WJEbmqICFLmhKSpAkRuaogIUuaEpKkCRG5qiAhS5oSkqQJEbmqICFLmhmZUWpchvPl1tpxCe
      cir8HlTFSZm/9HqL9I6lqADvQmLRKCUOP92dpxgZiRMaHeLuD3yaZfX+6y3aO46iArwLKS3z
      E4tF8ZVW0FAr8JQEqChzXW+x3pEU9wIVuaG56kVwMpm8dKV3AFcTe3utKMo4P1yJjNfdChSP
      JjjSMUI0Z4dHx9O56b93Apauc7xzhL7QWyv66OT16Qi6B8bpG7/0uUeuk3xv0j80Sf948i3v
      04XfXavf/7qvARLRJPFMnlOdIwxGMtyytAJFgiV0TrZncTic6HqBDTe1ELgO0rb3hFi6ooH2
      1gHGwkmyiTglJV6SeQuPz0MhmcNf5WZ0PEO+YADQVB+8NsLJPJMxnRK/Su9oFCyDY60j1C2u
      wczrVJVoeF0KrYMpfF6FwXAKzdTxOVWcPi+4fbQEnZc+zzwQT+fwaU46eoaJxIOc6J5g9bIq
      slmDUgfoioPJyQixVDknO8ZYuryBW1rcl274KrnuI4DL7cTrdqIKwfqmSgASGTu5bV1VGWZO
      J5XJY16nlcqSej9tnWO4fT4qS5z4y3w0VvhorC4jmzdIZvIYlsTvcxFLpEkV5npzwAIhnGiq
      Sb5gEImmSCTSBAM+8pZCTdCDYVgYuQyoGpXBMgLeqYSnimAkdPlpZOaDEo+TZDpHc2MVmUSS
      mqAPU9Go9rvRTYtEOk9zYxX5ZIrKch+Fa5Rc9aoXwclkktLS+bMzW7rOZNaiespqUcjn6Z/M
      sqIhcFXtJhIJysrK5kPEafK5HIPRPMvq5se8ON8yTkYSSNVBld8zb20uxH0cGY/i9vko983P
      aHQlMl61ApimSTp9ua9XuX5ks1k8nvl7EBaCoozzw5XIOC+z6vnuERaK3wQ5izLOD5cr43Vf
      AxQpcj0pKkCRG5rfOAXQk2n05Dt/zVHkN4PfOAWIHm0lerT1eotR5F3CdXeEXSnVO2+53iIU
      eRfxGzcCFCkynxQVoMgNTVEBitzQFBWgyA1NUQGK3NAUFaDIDU1RAYrc0BQVoMgNTVEBitzQ
      XJYn2EgMs/tUiMZyF5PhGJ5SL4WCxfatmxdaviJFFpTLUwDFR4WWoi+UZ1mVj9Gcgt+lYFkW
      lmUxH5lV9PEwjsogKAszKFmWhWEYC9L2fFGUcX64EhkvSwGcbg9l1YvZsKSe0VCEbQEv8ayF
      oihIKVFV9aoEBph47jUqHrwbZ03lVbc1F4qioGnv7K1PRRnnhyuRcV5CIi9XAeL7DlNy8xrU
      Et/VnPJtsRCxrPNNUcb54UpkvPaL4GIeuiLvIK7pWOa/rbiVucg7i6IZtMgNTVEBitzQFBWg
      yA3Nu0YBBv7wyyReeu16i1HkN4x3hEE3feAI7vWrr8o8WvflP8JRUz2PUhW5EXiHjABXbxst
      PvxF3g7vCAXwbb9lzt4//cYRzNTMHEBmKk36jSPXSrQi73KuqQJkDh7B+g1IpFvkxuEd4wme
      Szl8t26ZNTIIAZ71qxdKuiI3GHMqQDIWYSQ0Me+7FrzbtqBc5T6g3Nk2cmfa5kmiIjc6sxRg
      fGSAgbEwVi7J2faeayaId9sWFN+llcPZ0oze37/wAhW5IZilAOHJMU6faqNxSQvrVi2dKrV4
      4fGf09rTzr69r3P0xHEOHDq64MJF/9/vYIxPzChTy4P47rlrwc9d5MZglh9g9Yat5HOvs2fP
      AbbfsR0HEB87R15xMTGZoD64MAEx8W9/l5IPfgC16nw8QOnv/S7A7OCGgP+KgzLebYEc14t3
      m4xzOsJM08LlOv+KGX9tM/fdV43mcTC2QAExFf/hC1d1/JsL6ItNo95tgRzXi3ebjLOmQJOj
      g4SjcfKGhbig3F3iQ1OdNNbX4vKWUV1xdS+texNzYoL4t79z1e0U2toptLXPg0QLh5VOF83A
      V4kZDpN6/Gfz1t4sBaisW8Q9991HeYlKZ1ffvJ3oYqhVVfh///cuu74ZDpP62ewb4N6yGfeW
      80H6ie/807zIN58U2tsptL+zlfSdjhIM4rlr5/y1N1fh4f376GztYCwcnbcTXYz4176Gce7c
      ZddXgkE8O3desp7vkQ9chVQLg3vzZtybi5k0rgahKKgVFfPW3pwKUF1RRm8ozk1rl8/biS6G
      a/utZF984bLrX+wGGAMDGAMD058zT/4Sc3JiVr0iRS5kTgXw+StoCHqJJnMLLoBxrh/Pgw+R
      eeIXmJEwAFYmg5XJzFk/9/o+cq/vu2S7pZ/7PHpHx7zKWuTdx5xL5er6JXz4k41oDseCC1Dy
      qU8DIO64AyUQBMDosOfJzo2bZtV3v+e2aQVRvN7zX4hZVYsUuSRzjgBH39jHkSOnuJbWXrW8
      AjGVFMu5cdOcD/+bGJ3tGJ3nF5OFE8fQTxyfVc/9ntvmX9Ai7yrmGAFMAoEg/SPRBclgUjh5
      HG35ypm99xXivHmmcmgrVqGtWHVVbRa5MZk1AsSiUZzuEmpqqkhEYwtwyqtXKysaQVrW9GfF
      60VGJjGHBt7iqCJFZjNLAbwuB2OT46QzCXIFc95P6Lxp04ye2opGyD3zy1n19FPHKRzYO2cb
      hdf3IuMzldNob8VoP//+YHNooKgQRS7JLAVIRzMsX76YyViOupr5sbda4UkAzOFBzOHBGd8J
      fwDnjttnHaMtW4nRPbcVx/3gwyjB8hllzh134Nxxx/Rno6MNa3L8akUv8i5nlgKYeprdLx+h
      ualu3hbB+ReePv/h12ZAQlFmPcxWNELhtZfwfvrzc7f33C+xopHzTWYzGD2dGGdOnG8jNIrj
      5i1XL3yRdzWzt0I0LeORDz/E4vLyueq/LTyffBQAtWERauOiS9YX/gCoGvqh/bO+s6IRCntf
      sesAVmSS3I//FZipW2+es0iRt2JWdujIuW4OtPdQV1LF0vdswn+JBq4kO/R8IC0LGY9Njxpv
      TqnUhpmKlf77v0Wprcfz8c8C776sxteLd5uMs0aAkqCfW269g1QyzJtuMCOf5tCelzl4/NS8
      BsRYsQj5F5+6smPGhpHZ2TsqzZFBzJHz6wvPZ34PcZ2cYzKTmTEdK/LOZZYfwFKchPq6CTY0
      4nyzUNEoLfUylMjSVDGPATG+UpRlq8g+9wSOXQ/aZbksRutJhNuLumbDrEOkJQGJNAyMY2+g
      bboVAGPvy/b31XV2xTI/2oc+NR0YcS0DOWQygXH6GKxad0XHvduCTa4XVxUQYxbyRONxzLyF
      hZ19QUgLR1ktd69vYHT87QfE6EffAMCx+dbpMtm0FLW8AmUqgMEY6EXVC6Bpcwc1NC4+f6xq
      17GiYVSnE23TNsRFAiGuZSCH5XKiD/TOOp/M2vubhGduh927LdjkenFVATH5dJwTx0/QOzQ6
      XaY6PSxb2oyqXV1AjLZmA+LXvLUyFkG43MhsBpnNoK25CW3TrZhtpwDIfvcb03WtWHSGA+xN
      RdJffhbcnos+WNcaJVCOc9dDs8qNI/sxjsxe2Be5fsxSE2lYLF3ZzLLlt56fAs0TMjq12zMe
      RfHbG9+skUH0vS/h2PleRKAc1eNFeLw43/8hAFwf+u3p463RQWR3K1ZvJ66P/s50uevDn551
      LisaRgnO377xK8GKhjHaTqBt2jajXNuy47rIU+TizBoBVI8Xr9vLuc6z6FfZuMxlkbksVsy2
      2Rd+8UMo5DGPHpiuo63biOcP/hylrhG1rvG8YFMPr777+fNl9YuQo0M4H/rYrHOZ7acx2k9P
      fy48+ZMZo8W1RAlW4P7U788ql/EoMr7wQUZzIXMZzAvuTxGbWQpg6QaWcLNyVfNVp40z+7sx
      +7vRX7MfYm3n/YBE2zE7rcmbdQCME4fI/es/Ypw4hOuRT52XrbcTaeiYHWcwThyacbzMZSGX
      nf6sLm5BJuNXeQXzizU2jDU2fN3OX3w922xmvyVSWpw49Dq941kefug+LrW8vVI/gNF+GrVp
      GcJ9PutE4amf4Hzo45c+9uQhtJu2Tj9ESm3DebFzWcyTh9G23THnse8E+/Vccl/IO0HGS/Fu
      k3F2Jy8UdBPc0qQwz4IVnvopSm0D1kCP3WNPod1+3/T/ZSyCTMTQ9zyPzGUxTh+drqvdtPWi
      bQu3By5QquuJzGUx3tg9q1ypbbjow1/k+jDnLGfL9vew8967mO/HyfnQx1ACs7dYXFim73sJ
      SsowO84go2Hk6ADWwPkUjfqeFzAOvIKYOkbf/SyFp348Nd+fOZgVnvnp9PrjWiITMQpP/giz
      8+x0mXH6CMapYlr3q8WKRSg889N5a29OBTh15BUe+7dnmDsq9/KRiRjGvpfsHvHga1jjI/YX
      QmAN9qI/+xgyPvMBdT74MazW42i33I5MxXHc9wjqivMOJav1OEpV7fRnbdMOHA98DFIJrI7T
      Mxa+zgfmVriFROayGHtfQF29AWVxy3k5129B21DcnHe1KIFynA/MNoK8Xeb0FixdvoG8EuLt
      WtXN7laQoCxdhbrhgncDT3XQyiL7wVCXr7X39iRiiDLbr6A//zhKYzNq84qZbZ6xt164vvCl
      GeVvHkdZAKV+MaQSUDY/SbveDtZgH+r6LVhdZ2esc4q8M5lzBMhmcox0d/N2c5gpjc0oi5oR
      ioL+/OMItwdt252IQBCZz4KeB6cLs7sV8+RBzNPnpwbqph2ImgZy3/ob9Gd+gvH6r+zydZtR
      19k5dWQyNt3Ty1gYY79dR7tt13mFuE6oy9egLFuDdsf902Uyl7U7hSLvOGYpQCY2wZ69e+mf
      iPJ2c0IIt2e693N+9PyefvPQHowXfo7+ws+RkXFbUarrsQa6kIko+os/RyZiyFOlMUAAACAA
      SURBVFgY5wd+G8cjn0VdP3PaIBNR9Gf/HTlhe6qtyZBtX89nKTz+z29T4vlDJqLov/jX6RFr
      mnzOlvU6+SaKzM3skMhAFTt2bGXtyuVX5AeQ+Sxmz1u/uMJ4/QVwOFA3bkeU+BFuD4XH/xl1
      604QCtq9H0BdtgYUxe7VC7lZPbpx8FVESRkUckjLQqlpwBofhnwO54c/h9nTdkk5FhJRFsTx
      4MfB6cKaUlLh9iCTMfSffQ/SyRn1zdbjmK2zM1rMN9Ky3nF+kbeDzGftWcQ8MecznsnpRIZH
      uNKIYPPwHmQyjv6rXyATUcyzxzD2vwTYC2Ln5/4MpXklSmOz/fD/89dw7HoEIQSFH3wT68wR
      rIkx5Mg5hMuN1d+F1Tszl6Zj1weR4XHM3g5IJ7GGehGlfvSnf4TV247S2ITS2ITx/OPI/MIn
      9poL+eaodIEFSmlsQalbPKOeNTGGqKpDXbNx4YVKJzHPLvw7HeYbmZgZ+20N92O1nZy39mfH
      BMcmCE3EaF67ctoJJqVJf18/plFgaGSMfCbBeHimYMLlwfHAx8FXiuPeRxBlQZRla1Bq7UAV
      8/BrGC88jvnyE1jtJ7B623F85PPTP77j4U/bPTugNK9CBCsQ9UuQhfMPsUzG0X/xfZyf+UOE
      oSNK/airN6Ku2Yh603ZEwxKEy2P/Lb0+7xGT+Rz6D/8RddkalMVLz3/hctsGAV/pdZFLlPrR
      br37sutbfe3XrQMBsCbHsIb70X/x/RnlastqZDg0b+eZZQUSCPtNdBfY1M1CHjMb4dUD4ywp
      d3FwRBBwSiqDZefjAdJJOP46YvEyZO0icLpA1WDxMizDQGy/FzHUh0xEsKSEXBb5s39BrNmI
      4i9HLl5mnz+dsB+S+iVYI/1Y3lJkNIx1dA8gkJFxzJNvIOX5Pd9W+0mUBz9lj1hvTn+aV2Jl
      kkhFtc2u12ofu2kg3v8x9Kd/iPSWoj38GSgpQ/a1I9uOI7bciVg5FecQtF8GYl2HmIVLYRkm
      imnAr8lzrWSUhgmmCTt2zTifKOQR2+99SxmuKh7AG6hkx/ZK9FxuOttgLjFJ22CCpY0VhMJx
      fGU+UrmZ8QCy1I9V04AQAkVVZ+3LtwZ7EL1tqM0rkIU8ytLV6AdfRvGVAKDm0uAtxXj6hyhb
      7oCzR5BuLyKTQnv0T+DeRzAPvwZbdyJjEdTmlSiahnn4NdRFLSjZFOaRPahb7gAJQtMwO06h
      rr4ZUeK/dvvYtRLk8nXoB19BbVyCFqxApuJYhTyWw4lj7cUz3r2j9tovXztn8ULKKJMxROnU
      mu8iHnNr0HaKqs0rL9rOlcg4Z63J0QHOnOlk5S23UhcooaRqMQ/ev3iuqtMIRUGoKuh5hMs9
      4zvjlScRvlLU9+xClAawOk6BXkBduQFRUoZ1rguz+wzqjl0oG7ahNK20pzGlgeleUuZzKBu2
      Ifs7sAa6YFGLXbb6ZvCWIhQF7a7fwuq3U6mYh15F3boTUXKpqOb5QyZjmEf3oa7djLKoBfX2
      99v3psSPetv9yFfzSMuaTgF5LZGpOFb7CdQtd17zc18u5tG9aDtnx1FciKiqw2o/AW+hAFfC
      nL/E4MAQ6axOb9flZ1eW+Rw43Yj6JuTk2PQ8zeo8jaiqRY70Y+55BvPoHtA08JYgY2GUppWQ
      iqOsuwV8ZciBrvMKVFIGqQT6j76J8eyPsLpOY40NIqrqkGODWF2nESV+ZNdpzEOv2hfUtBJR
      UYscH8Y8duks0vOJKA2g7XwQ8/UXkJHxGR2BtCwo5CA2OeMYY+9zmG0LbwUil8Ua6F7481wF
      l3r47UoOZGQcq79zXs45pwLU1dXiLStj65aLD9ezyOeQEyNYHSeRmfOmPlnIIXtbwe1BWbsF
      MmmM536C8aNvIsNjthCbbkdpmvL8ZtJYnacw9zyLdegVZC4D4RBMhiAyjrrpdtQd94FlInum
      nEuKAg4n5jE7k5x1fB/ahz6PsnrjdbG7y0QMIjOTcsmJEeRQLzI8s1ypqrtoGOe84vYivCUL
      f555xnj2xzM+y8FuMAqQv9qNOjZzKoAEHJrKlaRVEGUBlJbVoCiI8hoIVtnlLjfqPR8EQ8c6
      vh+ZSaE98ElEYwvKipuwBrqx9r9oa3XbUaiuQ4ZDqHc+gEwlIZ1E2Xwn2se/CEJBphNYnaeQ
      E6Moa7cgI+PI0UHI5xANLUjLQr3jAXuEeONXkEnNy426XKS0ULbcjvrwozN6XDncDwhEZc3M
      Azw+cM6cMi4IDifqtnsW/jzzzPSa4E2cbtTtuxArZidMeDvMUoDocC8HT7XT1z90RSn3ZSqO
      8eLjKIuXYe5/cXqoV5avR5SUoe58CPX9n0C97f6paVEd1rG9yHQSZcf9IO2NbiTiyGQCUepH
      lPox9z2P1dOKeehVRGUt5DIoK29Ce/izKMvWIrMZrNZjWEdew3zllxC3wy6VJcvRHn502rR6
      zcik7OlG+wmsTjuuWRZyyEQUsmmszvNRWXLKKSbqLp0s7GqRoSHMI3tmlVvdZ+eoff2R6QTm
      3ufszi513oEnB7oxnvvJvHVssxQgWN/MhuWLqaupurIIIl8porIO3F6UlTfNcGBYgz0Yz/wY
      9AIyPI6cHEVU1CBWbEB2nUGpW4SMTSKq6hDBSijksNpOIGOTYBmIhiZkaAgpJVbHKYwnvo91
      rgur+wyiqhblPfehbL0LkrHrZmd/E+Ers6+/4wRK06rpcqV5FfgrkKMD0ztgra7TyGs0Qona
      RSirbpr+LKU1rYDvSLwltsc3UAGF85Epym33oz38WYRvfjq2OQJiBC0r13HvrjuvbC9QJo0Q
      AvPVp2wfQCw8/ZUc6oPIONbeZ5FDfSiLltp+g/A46u3vswVZugZl1c2Qy6Ks2YTs67D/v/Jm
      GBtEvWUnjA2i3f8RtPd93J4ydZ6eaq8FeWTPlMVHIFMJzNdfxBrsQRbyV3WDrgRZyGP1tmO1
      HUdZtRFr/wvIVAI52AuJiD2iqufn+6Kixl60X4MpkBzoRk6MnS/IpO3OZ9lMc6d5wPbcW4O9
      1/Te/TpCKGj3fhDtrodnlcvI5LzJNn/2OFW1F6PphO0Fvnk7AObzP0V2nERpWoly672QjCGq
      G7DajiHqFiOjU5mj33gZOdyPTCWwDr8GXh+ivskeFarr7bqToxiPfQfzie8j3F6U+iXIvg6s
      o/ugshYMHdlxEvPpHyInRq75/B9A9rbZGwHzWcRN2xElZYjyKlA0RP0ShMN5XgmyGeTk2Fs3
      OE8oy9airFh/vsDhhF9fjwDK+m2zyq4XMp3E6mkF79wvP58P5k0B5OQYsqcNEjGsA7+aHual
      JcHtQYaGpx920bIa4jH7x3e6MHc/hbJ2iz39iUdQH/kdxJIViOoGe+Ebj2CdOoiy6XYwTcT6
      rYiWVchsBuX296Fsu9t+uJatsS9qzSZETQNixXqE0zVfl3hJhNNlm+nSSahvggtSOFpdp5Gh
      IfBXYL7w70hpgbcE0gn7/wuMLOSxjl9gFr7Y9Mfpsh2Vi1qu6b2TmdSs+2CdPoTsbbOfqwuY
      SzZrqA9r6Mrfaz1vCqA0tiC27pxyUGWndx4qi5aCUBCLl6K0rEK9/yP2AU4XypY7EVV1UMiD
      aYCu2+bNoV6UVTch+9qQw/2I0gBi8TKE2wuKag/b2Qxy9JxtXTp7FGXjDtQd92H1d2L1dSB7
      O5CDC/+i71lYFjhcyNaj9o7Q4X5kJoWyZjOibjGitAxRuwiyaUR1PVbXGduKtUDI6CTGcz9F
      jo8gmu39UdaZw1in3kCUV2OdPny+7pRpWY6P2HJfy+ljT6ttJOg773tSlq5GWbMZZe35dyvb
      08w5dvvqBcTbyAM1rwZokUkhahchM+nz1pdwCGXpGnvvT18HcmIMsWIdIptGvvoksn4JYvl6
      e4ToPI0or0Z2t6K0rEbZdDtyqBeq66GvHWuoD7F0DbjcWC/9HOHygMeLEAJ5aDdWOon20G/b
      a4POU8jTh+DCDWkLjbQQS5ZjvfEywl+Osu4W5MQowleGdXC37dUeH0E0rUB4S23FCFYhPAs3
      xAMIIWZaw7JplM132ErYcn6hzsg5ZMcpRP0SaGhaUJlmyVjqR/Z32c/JlPefihqEr2xaEYXT
      hextxzr0Kgz1gWUhtu60MwIaOjiufMSaX598No08cwQm7NhfGQuDy43sbUcO92MdfBU8Xqz9
      v4ISvz0VKhTANJCnDyOClYglyyEZx3zi+5DP2m22n7QfpEVLEfks1ku/gHwe4jGs5x5DrNuC
      TKcQy9dhHXgZopOI8mrUBz4xr5d3KWQ2AwPdCNNEeLxYu59G6AVEoALl7t+CcAg5PooI2D2V
      PHMYPD576rdAiGAl6ns/ahslpgwTYu0WyGaw9j4PifOJumQ6CbqOWLfFrmvYqdGsw68tvMVI
      cyKH+hC1dnI0eeoQ1vOPIduOw8So/YftbxLVDVC3GHHzDoTHa289P3Vous6VMK8KIPM58HhR
      7ng/ZFLIiVFkIopYs9Ge6pgG8lwXomEJ5LPIwR6E14s8+Ar4g1DqRzQ0TS16BNbe55ED3SBA
      ufUexNY77emStBA19Sh3vNfuOd54GeH2Ik8cQA71IEf6Z3lcrwXCW4LYdhdIC5YsR9n5IKJp
      he2Ue/VJu8dtXmFbuADR2GJP/RZyDSAt29TqL8fqOjMtpxzus40WF0xzRIkfsXKDfR3NK6dz
      rSq33IlYaPOyYnudRP0Su4NwOOzdBW3Hkf2d0+tHOTYIQoFMyn5JirB3AYj6JVBVd+WnnS/5
      ZSwCk2O2dsYjyMiE3YPkcsgzR21FuGkbJGLI7rP2VtfSgO0vCFQhAuXIiVGsFx63zYOb3mMr
      gsMFiag9grz2rL31WlHBspBjwyClvd5wuWzLxpsmRZcbOXIdXpIXj0B9E7L1ONae55CZtH0f
      Mmnbpq05kZEJZCaFqFsMqjadNXohkJEJrD3PgdM1vRVCjgwgQ8OgObC6phxhUtqdhseLtfc5
      u664dpv2rDdeRb3vQ1htx5GRCcTy9fZaqXYRorEZIhN2RbcX4XLZ8r6ZbdtXirL9nre1aL+8
      K5SScCSCNN8iIMYfRFTXg8cL0QmUdVtsS46p298VCnYQy/J1tpa73PafXkBZv8VWnGzGNhEO
      9UFlLSKXRXh9UxvezkJoGOF0o2zYai80O04iB3tQ7nrIvkmmibJ6I0JR7aE0c20dPfJcF/L1
      lxCRkG3uVVQ41wmWRGgOhGnavf/EmD3XzaanPl/50H3ZpJK26dU8vz9edp9F5LP2/Z3a7iKz
      GRjuh7NHEVvusKc9+nynRrs4ypRxRPjLQVGQfe32PXO6EYuXQY29PVo0rbQtgSs2QDw6LaPs
      PGXPFq6Qy1oEW0ae7t4B/B4FFTl3QAwgyypQBnux7n0EDANhmbZVJBGzf/zRQeTOhxCmARW1
      cPx15KIWrKp6xGAvIp+zNVsISCVh9UZoP4kMVCDv+xDi4G7k6puRg71Ip9O+QYBsPY4cHQBV
      wzp9GGGaYJjI00cwm+xtswseyDHUh3JsH1imPQr5fbZVw+FCqJqdtS6dshfs/nKs7lbE+BCY
      OmagEgxjYWSsrkcxdKxCAZFJYaUSWMFKlLFBMAzkzSsxDAMlnbA96S43su0EssSPZRgo+RxS
      CKTLDSxcYJGQFqLtBDIZg+oGhGEgB3pg6522czGTtgOHWo+jxMKYTpf9rAUqbFN5Io5oWXPF
      9/GyFMA0DaLhECX1dUxGk3MGxADIpuXIgW6UztOITe+xo7F2fQg6TiL7OyGTQRnqs60zdYtB
      cyIyacShVyGXRay/BZmIoaia7dldsd624oSGEa88CVJC11kwdIRh2NahRBRGztm7SZtWwOQY
      8vh+GOqBqtrpwIgFDzZpWm736KcOQiFvbwyUFiIesRdyDifUL4HIuN37uj22tcxfgeJ0IjRt
      QWSU0oLIhJ1Jr7IWefAV1OoGZHU95HMotY0ITbP3BDldUCjY64ChPkBC91nbSrV4KcLjW7j7
      6CvF6uuwf8eGJeBw2FthTh4Ey0Ldfg9C05ClZUi9gNrbBrWNqNJCPvsT28T8Nn7ry6rlcJfw
      3vvvf8s6MjRsD6H+cnsx3Ndh27dzGchm7fmkaSDbT4IlITRsL/4MA7F2M/iDyKP7YDKE1AuI
      DVunfAB+OyyvvMqe5uRz9s0ZH4GRAdsD7S2B2kYYH0F2nLIXQ5k0wnvt9gXJoT7bYaMo4PLA
      ohbw+GxlFIo9EuoFe/dnOmXHOtQ02tYs7e0moLkMxgaR0UlEodkO1wxW2Z2RXrB7+5efhNvu
      g1wOTMvuZFIJe432Znisw7mwMgLyxAHbcej2IhxOpKrZFqmVG5DdZ5GDPfaz1d9p/zt8zs4v
      5fIgVt2EHB+d+s2vzKQ8f6qsqsjIuB3skklBWRAKeeTZIwjVYd9Ef9Ce4hRy9jTI4QRNs+ek
      FdX2w9yyyp46ZTPg9SGr62zL0eQY0jTsxaQQdnCJ2wsej71xKjIB/Z32QtMyQc/bIXbzdoGX
      oKIG3G47iN804fWXEFtuR4ZDCF23FaOpEfq7IFiOdeYIQnPYHUQ6acu9EJQFoaTUNieblv2b
      FHKIQCXEo4jla+2ePxUHJFJVEZkUcmzQtlgN9CALBZS6RfbvtUBIvWCv/xy2osmzx0DXka3H
      puM9hNeHrKqfNo+LqjqkrxSxYr1tHSrkrnjbxPxZgaREz6bR8xkMjwdRWYMs5DBdbgy3C6N+
      MabmwLBMrIoqdE1DVwSGaWCkExgj/RjJGEY8jFHIITZuRzYtx+g5i6Eq6JqKqSroLhfy5lsx
      SsswPB6MfBZTVTB6WjF8JRixSYxMCmv5OuQFuTkXGuHxYni8mC4Xps+HtXYT+plDmJaB4XSg
      awpWPoehaejpJIa0MLDQPV5EWXDB5LLC4xjRCWhsRgYrMNIJLH85lj+I4Q9QCA1iRSfhPbsw
      HBqmrwRjcgzTa8cpmIEKDPfCb4mQ5VXoChhjU5a7TTswysowK2vQNQ1zbAAzNIxUFSy3GyOb
      ohAOYaUT9nWm4kjrShP5zOMIYJoGRrAcK51EJGM4AVlVS2G4DwmI+CTuVRvRO09iWSaizI+V
      y6BoKpZhIaSFVrcI9AKOltVkju7BDI+hON1Irw8UFeeipZjDfZh9bZjm1PtrNBUVCRVViNIA
      Zi5tP1CJCJrbc8n3G8zb9acSFJJRlGAFVi6LMnoOC8vu0TQNaZpo2A+90KakEgAWjkIOxb0w
      7zczBRhVtWiWhSmAllXo4RBWOo7i9WLGJiGdwIqMYXm8WEYBkYwiCznc48PoWFgKOOx8IQuG
      ns9iOJ0oet5OluBwYbk9WEYB3G68O+7HnBhBz2dQS/zoAjDyWPkMIpUgpwhc+ewV9+jzNgKY
      pk7eyKM7NPSSUgqREPlElILPi+5Q0Z0OcukYNK2ggIXpcuFctxVZXYvhcqI2rSCXTZJNRcmF
      Bimk4+gOB+qKDZhuNwVM8pkEYvEy8oqwz+N0oqsq2VQMKmvJRkPoHg86kkI2SW58aL4u75JI
      o0BBU8mlExQsgwIm6tK16D4fBUWgaxq5ZBTT66PgdFBwONCdDgpu94K+ucUUUMhnyE8MYSiC
      9FA32WSEgp4jm05QcDgp5DNkxofIOzR0zUHB1NE1FSOfQVbVYZT4EY6FXQOYQtj3L5tEXbIC
      WVKKWVKKrmkYLhcSyMUmMRSFXHwSwx8k73Bg+svJ9LdR0DQU/3XcC+SorEdNxux9J6qGZRqo
      wUpUaYKqYmXT6IUc+eg4QlNxNa0gEw9jGgWk10s6FcUydITThSIEuq8EmU0T7z2DozSAEEGy
      yTCqqWNaBlLTbAuHoiKEQio+jiXsfS/SyFO26mby0Yn5urxLogUqMTweLENHKwli6DnMZMTu
      qRwaisONK1hFNjw6Nc+VdvoWhxPFtXBZpIWvDKW6AeHykBruxVFegxEeRU5Z8ATgrWkkE58A
      IXBX15MdHwZVRWQS6MkoEtNerywgwh+kMDF1X8bO4aioITMxhGXpCKFQOLMfV6AShI/c+CCK
      5sR0qPZrco08eaeGaehXPOLPiwLkUnHa2zvQHBpGIc+ypioGJyKYQiE+PEqwqo6AQ0N1OMEy
      KKiCbCqGozSAdHvITo5i6TmCKzaQCg2SjIVw+PwYws5VqmcSGJkUpqLglBbOxhaSo32IKeuK
      4nAgJDhrF5EJj6I6XCSioWu3AJ5CdzixnE4sReIoC2IJhYKmAgqKpqC6PeiaCpqKZVlTScjA
      0vOoCxQUIxWBo7IWC9CdTnLZONJpP8y+qgbSE8Nk4hPkp6ZlhcQk0unAE6giFZ+0LXUL3PsD
      JKNjFBz246h6PKSHu5GKRDgc9ghp6hjZJEYmher1YeZzoGkYsRCq040sKUN9G0H/86IA7hIf
      wpSYqkE8laJQyKG6fDjUNNSuIpsdo8xXQjabxOkrRbhcpLIJNMvE0LOgqZgWjA+24y0tx5Q+
      pKqglgWIpcJULVpFZKQbIcFV1UhyYgjd4bATcCkaumkAFkYhQ8HhQHM6yWWTuEquXar0+OQw
      eacDDB2HvwLF6cIsFNAdGlLYeZMoZCg4ba+sVFUUIbCQCzoF8lTY+2MyibC9GJcGQvNgSRM9
      GQGXC8VfTiE+gUDacioqiWwCZ1mAQj4DloVpGqjqwvlRTIcDfeph19PRqQdfm1rY2h1FwSyA
      Q0OYOtKhIlERSNCzCKFcSQ6HaeblitKJBKrXS7CinEy+QLJQQOoGzpIGouOnqaxvQSgF8tkE
      hpGjkM8ihUDTMwhVQ3V7MAo5TEPHMnKY0kSRBhQMDGkRj09gOhzk81lykWFUt4uK2iXE4xMY
      ho6RSxOoaES3DCwBms9PIR3DU1FrD/Nv585cIYVClpyQ4FAxswn87lq0siCFxLj9gAuBpgjy
      qoLDXWpfq7TQNKft+V4gDEMnl0uSScdIWwZM9bJCaCiKiqnnGR3rBaeGIlQkdlyA4nBQMLJI
      VcE9T/G3b0VOmhScDtsPIbBjSIRAWlNT3QvukddbRiaTOF8XUISKol75SDUvCjA8Nonm1Bgc
      60PTBJ0D3ZR5gwQVNzlFpXegHcMsoGdzoCmYlk5OzxLwVFDqC1Iw4kQS9u5Np8OF2+EjkupH
      U5w4FSfZiREUQwICn6eUZDZOXUWWkXAfDsWBJjS0VAojlyOtp9CEXRZI6JRPJtE0J4ZhLKgn
      OJWKMjQ2giWgoqyGRCFMLpcmHB3FxEJBUFOhEYlNoFs6JgZIcDt8GEo3mupYEBkTqTCJbBS3
      y8foeD8CgSY0kKCj234u4QQLdMVAU9T/v717jW3rvO84/j3nkDykSJGSSEqyKFqSLcuWLFmK
      LMWOL1VaJ63bOAmQImvfNAuQpAiKYRu6y5tuaIANHdAWGAasWDCsWJH0TZNegqSptzbOxWjT
      xInt+G7JknW1ZPF+vx3ynL1Q7NW1nVgWKavm83mnA4r688/z0yHPOc/zoBULmCQTitWCls0t
      1SgtHU0r1ceZhQDpbGLpzJlkoBsGsiTjstaTyEZRUChRQpHN2GwpoukgZizolDAARVIomk5h
      ManLqrEsr6Srq4tQNsDhiddRFRVN1djU0EPKEka3a8zHp6mzNhDWwmSKSVRJpdbkYr13I9Op
      iyQKMUoNBepVDwU9T5wo4WwIwzAwY6FklDCbTOSKORRZYXfTPo5F3yNrT6NKKrJkJlGIoTqt
      ZOU0JhSc1JNWs+zpXJoLZzWW95y8eB6fup4dLfcjSRK6ofPC2R8gyeC2NDHQNszB6Z/is/kJ
      5i6TKMTo9gywxd2DJEkVqXE8dp5sOkWRPGE1iGzIKIoZVbES08KYMaNabMglBUky0CiQLWWx
      YiNPDs3QGGn+Al3epYnLKtXHeXWcQHwRWZbQDA1d0pEAk0NlPjGPyTBhU2qQZZkkCTLuFIYO
      OTmLBQuSIdPns7DR1bWsGssW5VqLE6vh5GL4ApIB6+1dxDOznAmeBAl2OvwsBs9Sp9YzHr+I
      z+nnlehLOMy1RLIh0oU0siwjyWCVazAMHbe9kZnUJG6rh2A6gNfRRCA5Qzz5Gr3eAU4kPqCg
      a2S0NHaTg5Q2R41SQ7qYZrClmYXofLle3i15wPcoPx37MTt9SwuBn1j8kLHgBfZvfITfzr7F
      loZ+2h2bSeVTRLMpsnkNHSr6Ec2m2FlILLCxrgu3tYUPL72H3WwnXyrQ29jPVHSCRGEWRVZw
      qS7WOzYyGTmOJEk4VAexbIxJ9SLbvMOf/sdWIFnIMBWdZq9/H+9MvYEhGSiywnw0gIJCoZTH
      AKwmG26bm8X0ZVSTisNSy3RqDofFgcuy/O98ZQuAqlg5f+kcWxq3MhEeo9XRxkT4AuOXJlnn
      bOaCMs6Z6bNYzVY63BuYW5zn/k2fo9bi4odHnqdY0jApJjo9mxgPXkAyZCb1WWRZIiInMMkm
      gsFz1KgOYlqcVxZ+xrpaHyVdJpFJ0dDQSIPVS1pLMxuZJ2CJEEpFP73wMnKpdTzV9xdXf7bK
      NWyrHyKRSvJ0/1/SaG9CN3RShSRbPf28eu5lut3lmeHsZpK5BHOhWfS8TCB1mVQ8Q7O7lXU2
      J5cC8/icbVxceIv+dduZi8ww4PbQXbeNt8cPkdcuYbPYSDsrPzZ4U103A41DHJ54k1A0AkgM
      +O7BbrEjo/DbycNoxSL++lZihQQuUwMOpZZj00cxDNi//VE8tutnufg0ZR3x8J39/0pn/VZG
      Zy9To9Rx/4YH2dk6wjf3fosWezs7W0ewSW4cUhMetZUHNn6Rlz/8JfUmHybdRShSoEby8o0d
      f0MoUiAaK+K3b8aGh8VImkA0y8R8gMmFCHreztPD32C9s4NIrMQH4+dYZ+siHi/hVJqZWLzE
      yekJ0mWaQ/LTTIVnmApfOwCnu7GXbk8/fucGGu1Lb44syThVFw01bp7c/ixyhQedbPFu5Zt7
      v4Wvtg2vzUc2ZWGbdzeP9X4Vp9JCh7OHhVAOt+pnj//zlApmHt78OKrhHNTrIgAABuxJREFU
      IRLP4zb7iaXKtyTRJ9Xpd7XT4uhkPpAhl7awx/8ATw4+yxODz5BJmghEcqiGhwNdf8YDGx7h
      zwe/TiiWJRTNM+S777b+7m0dAfKZBPGsTqP7+kPOzrYdnNw4xrHpUzw2+CWeue/rABzYegCA
      TGFph6yxLF36b3b4eGbP1zDJJs5dHmWobWnFmBee+CEZLUONpYazC6PUmG0EEiE6mzpYiC/i
      ttfT4vLx1M6nWYymGQ9MUioZ/NOBb3Nk6jjffvV7DPiXMbnvCr09+i4AT+66dhr5fl//jR6+
      6jzWZrZu6aXW0oAkSdTb6nm0/yG8Dg9/PfJX2C12dnQMcmTqOGcWzjPSsY+zMz9CNuz0r1uF
      JZw+1tPcTSFrxuVqvqZ3X+x5iBd+9zL7uvYx0Pr/2/2OzYwHp67uT8slGVdGsyzDyZMnAYPe
      3j5KpdJ1n2Gv/Ne1q+W9v+X7rz/P3z707G39biqVwuGo3OzI5XjNlaxx5z8+wn889R3uae/l
      7178Z773tX+46WN/P3qMicAU7c2t7Nl076rVeMW/v/Hf7N40zD1tvdds/83pwzzY+5lra504
      yrbW7mv6vpwabysAZ08dJ5bV2XXvdkql0tUBMWvZapwFWqm1UmPq4wm9HDeYrmWt1PhJKn4W
      qKdv9Q6Jwuq70Y5/t1r9tXoEYQ0RARCqmgiAUNVWfCEsl8uhquoNr2be6Ea0W90GS1OZyH+0
      ouLNHnsrz1sqXT9kbjn13Gj7jWpczvP+4TZJkigWiyvq2a3WKPq4ZMUB0HW9YjeZSZJ0w6bc
      rkqcrSpnjYZhVKSXoo83t6Y/ApXzTasUUWN53Kka18iy5FeUGD8/iqaVyOkansb15LJp6u1m
      5gIxBvp67nSBAMzPThHLFChmkjgbvCRSWTrXN3H27AR9O7azestK3FxocZ65QAwrWWyuJjK5
      PC0eJ2NT8wwPro2r02uhj2ssAGBS7XjqFPImCU2vwWHTkCSJjva2O13aVbKi0NbmJ7gQxDDA
      2+DEMMC/sWNN7PywtJZWR3sbydAcJUmhrrYGkNjQ0XGnS7tqLfRxbR0bdR2tkEO31aHloE7N
      kUikyBdLhCOre2fnJylpGtFYCrvNxLomD4lEgngqQywcRlv9dblvSNeXemZzemlscJBIJEjn
      NEKRyJ0u7aq10MfbuhXiDyWTSWpr7+zSpLfibruEf6fcbTWurSOAIKwyEQChqq36l+DI9Cn+
      8ye/Zu+DB3Cbc9R5mrDV2CgaZshFKcg2fvL8d9n3xN9z7OCL5GtaeOwL95HUZD545xCf2/8Q
      wVCU7s2VXPyuwL/9y3dp6d3JfX3tmGy1SIqKpBeoc1iZXowz+cH/EnVtpT4/y+h0iC9/5SuE
      wxFCF06xbnAXpnSU9Z1bsCiVG+74Xz/4PnLDRh4e2U4GC9aPh5R63XWcuzCNFjjHaFDHlA8x
      n5D56uMPE45lGD3xPoO7PksyEmZz95YrqxNVwNrvo/Lcc889t5InKBQKqOqtf2ePz4+jNG9j
      4sRbjJ34kOlQgjf/5xBbd+7mtZd+zOnzFzApZvbu2cPY5BS2bIpgJsJrB9+BQorU4hQHD79P
      z9BuHJZbP4Dl8/ll1KkxMRUhFV8gcnmGw8dHCY8fIS438dF7hzh99CMyusLwyF7Gzo8x0ufj
      zSNjvPnLV9AtKnW1Bj968RfYG9fTvu7Wp+tbXo1w5sIkpBPEkkF+9cb75JKXCITzhMaPcfTU
      aaYWE2we3Evw8iU66+HETIyfv/orak06UjbIS68foqWzn8a6W5+Z7m7r46ofARxeP1Pv/obP
      73+Y3x9+m66ePhLxJK1OC9v7e0iavHgdJlx2C94aGXx9uOU4w8P30ubU0a31bMh9hN1SyTEI
      JmQtQt/wCPGZ0wxtaOPMu+9w4N6tJFsUDp+YYbjLT0uzm3xnK0emonx2x2bMFNm1a4C5QJId
      A5tp8VZu1meAOouOrf0e7PlFhoa2k5w6ytC+x/EQZeLgYfbvGsDqbUW/XMdCzsaAz06xOMRn
      en3MxQr0dqZwOyszI92Std/HO34WqJCOE8tLNDZU9szCys5e6MzNXaa1taWsNf2xlZ5hmZ2b
      w9/aWsaKrne39fGOXwiz2F00rvnxF3LF37RyqPTOv3Jrr48rPgJUesa1cvlTqFPUWB7LqXHF
      ARCEP2XiOoBQ1UQAhKomAiBUNREAoaqJAAhVTQRAqGoiAEJVEwEQqpoIgFDVRACEqiYCIFQ1
      EQChqokACFVNBECoaiIAQlUTARCqmgiAUNVEAISqJgIgVDURAKGqiQAIVU0EQKhqIgBCVRMB
      EKqaCIBQ1UQAhKomAiBUNREAoaqJAAhVTQRAqGoiAEJVEwEQqtr/AQ6geDimPwLyAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='5 cities breathable days-2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Absolute Value' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measure taken by China' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Per Capita Value' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Renewable Energy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOydd5weR3n4v7tv7/16Lzrp1LtlWZbtuGBwwQZsMBA7GEKSHyUFUkkwoaQB
      IUCoIZiYUIJNMWDjKlmyJVlWPenupOu9vve+9/a6O78/7iSrvLJ0srr2e5/3M7t7szPP7Myz
      U/aZGUkIIdDQuEqRL7YAGhoXE00BNK5qTlKAPdte4Auf/Uf+67H/I5VTgSRfeuQRRiO5o35y
      0VEeeeRLJM8wks1PP8GTz21/Qz9PP/Eoz21vmYvsb4rnnvwxT2/edcHiA+hrbyGaO/5a++7N
      fPfHTxId7eSfvvrdMwrnQMvMc3ri0W+yvaVzznJsf+5Jnnh685zvO588/cSjbN7Vdty1s03f
      XDhOAX7+nc9z67s+RDSV5Ydf+0fuffgTQIovfeYzjB6Tc7LJzg03rMNwhpGoySDPb93zhn4a
      FiyjrqJ4rvKfNXVNi2ioKbtg8REdYMmKG4mcoAD+0hpWLGoiOtrFP3/1v04bzK5nf8S9H/oU
      AAuWraKi2DtnUSrqmljQUDPn+84nTz/xKJt3tx93bUYBus5vxOIoebG2zim+84tXhBBCREa6
      xKM//bXIi6AoBfG2e+8TDTVV4nPf/IlIDu4WUCqCQojFpYi773uvWFBfLR7+q38TucSkeOt1
      q8U1668V9fMWiX09k+KZJx4T+7tGxM5nfyaWLVsmVi9fIu5+6C9E/vXIxUffs1H85ZceE499
      6S/FgiUrxdvecpOoqFkg2gbDonX7M2LlsiViyaJm8ZFPf0UkB3cLk7dUvOWmjeLHT28Vn/rj
      94jlq9aKddffKvom4+Lx7/6rWLhoiVgwr1782ee+KcJDh8T6NSvEhvXrxLK1N4iBqaT4y4fv
      Eh/99LcKxte24xnR1FAvbn3LHaKpqlg89tTuo3IOd+4V61cvFyuXLhb3fuCTIqcK8d1/+xux
      bPkKsWzpUvH1H/5m5vk4S8Tv33+vqCwvE1//36fEtz7/pwJ04m0Pflx8+qPvEc0r1orb7nlQ
      /PCbnxZr7nxYDO5+Spi85eLd994p6uvrxX//4kWx6Ylvi/o1dx73fN596zJhdvjEP/7H98V7
      Ni4WX3rsKdHftkNct2alWL92tbjtnX8gwsmcePiuNWLDzW8V61csFmtueY9Iq68/6y/95cPi
      PR/9tNj0xLdFReMi8fY7bhdl5VVi057uo34ObXpCFJXXixuuv0G8sGO/eOieW8TqtWvFTXc8
      IKZTefHR92wU6264TVy/dqlYuuFuEc8J8aNvfF4sWbJMLF+5Rmza0yk+ct+N4vPf/oXY/LP/
      FBj9YiSeF++/bYX4t2/+QFy3eplYf+1aMW/RKtEzmRAffc9GseK63xM3XbdarNp4p5iMZ4+m
      78ArT4nlS5eIFcuXi39/9JfiWL7x+T8XS5atECvXXCf2dA4XzM8T7z+2/BxTA8QYGYxSVlEB
      gLO0ngfvuwPd7H//4h+/ylc/+3H+72dPnqRE7/zAX/DEd7/I4088jt7i45+/+nUe+dtPYkoO
      s2PPQW69930sqS9l25bnsZY08vef/QKf/ZuPHw37RAxF8/jN0y+w1J9m6879/NtnP8V9H/sc
      2178Laua61GATCjG13/+PNf6Y3zx8Z38y7/+M43uNF//3v9x2zsf5D++/EXuvvkannzyKfoP
      7aUnrPKhj3yCb3zty5S5zW8Y39e++Hnu/X+P8Lvf/AyLSB3n9ztf+QKLb3+YnTu3cOf6JUz1
      7+Mjn3mUp7dsZ9Ovvsdf/uEHmUwD0Sh/940f87k/fYAnfvs7PvzhPwJsfPMbXwFg/upb+N3P
      H8VyTA4oGPnWj37JY1/8az71yBcKPpsPf/iPKV9wLX//sYeOXvvc3/wFN73/E7y841XK0m18
      7Qe/BmDZDXezZcuvaX/uJ/SHCz/rpLDzsyef4p71tfxu8/HN1HBGz9ObNqEf2sbzHSn+9Z//
      Gf3Eazz25BYAFl7zFja//Bxj235Fx8Agf/bnj/DRv/8n3vl7y/j057/MPffcw++e+R0vPP8C
      Xrvg+eee49mdQ7z7gXfz1a9/g7/95F+QHG5hz8FBANbefC8vbN1BZf4wj/1y0+vp+9Rfsf6O
      9/PZT36Iv/rE35CaHbfMTLbz54/8F3//T//K7y0r5fNf/nbB/Cx0/5Hyc8zjd9G0sIxXt28D
      4MCmn9K05m1kZiNzOR1YrHaEcvKoqS/gx+GyIYRgsPUV3nLnu2ntGcdpsxzn7w8+9re8bV0z
      P/re17lp442MxPIFM8UT8APgtNkRQpCIJ7BYzNg8JWxYu2JGaLOPIpeeeCyOJLK88tJmapff
      yDVLavnEB9/FV7//BEarA4BF17+dz3z0AV557pfcc/stPL2j/Q3jSyWSOBwOJJ0Jl+P4NCQS
      cSwWC7LRxcYbr0VOR8gYbLitRuweD3I6Rio/8zx9XiN2pw21wEhzsb/kpGuy0YrFKOPxeshl
      MwAcGaXO5wo/K4BYNILH4wYkPF4P8VgMAK/fh2yzY0dwqsFujzeAXgKbw3U0riO4AgHMMsTi
      UZR0jM2bN7Pu9gdoqvTNhB/wI+nt2G0gsgliacGB3TvIWkp5x20b2PDWuzm85WmeeP41/vav
      P8aXPv3XVF/7VqZbnubOdz9Mz3gMm0V/ND673Q7IeLxuMrnM6+mLxxnsPsTOw+P8zf97P9nZ
      R5FLxkgLid07tmIpbea2DStn0nRCfha8f7b8HKMAEv/6lW/ync/8CevWX8cN9/4hH/jww5ik
      Uz73gmTTSRKpDGN97QyGU8QTiaP/+9X/fov/+flz1DY0YDab0OvOLPAHP/hBvvkvj/AnH3w/
      b3nnB0grgFGPDpi/7maWFZsYDSfo6eqkqraeaCRCLpui5cAB4okYh197gU//yzfxllbhclgw
      GY1vGN/9730f3/q3R/jTj3yYfb3Hvzrf8/4P8Mvv/zuf+Ngfcu2Nd6OUreL3r/Fz33sf5t33
      f4C3f/zvqLIXCNTmodiS5T++NvOW0uv1J3nRJ0d46AN/xJ988hF+/8GHaFqwkMnD2/nkX32C
      Z7Z3AFDs9zPZ38qPfvns0fv+8CMf5z8/99f89Sf/lCd3jvCh9919Rs/1dBj0M3X0xtvfgUON
      EEtn6erqpb62ukD6qvjA/dfT3dPPyEAvxRWVGJxVvGV1gLh7IR9+z520t+zn7W+/h3QyRiqT
      pa99F+GURCIxo7A/f/Rr/NUnPs7v9k1x720bjwb90B/8Ab293cRCE+RtPpyznU971Qruv76O
      nv5JBnq7qKisKZiOgvfPlh/ECSSjIbH1pZdEz+DY7JWseGXTJhFN5UV4Yljs3Nsq8umo2LTp
      FZEVQux8ZZMIRlMiHQ2KLTt2CSGE6OtoFbtb2sVg9yHR3tV/XPh9na3ipS0vi0gifdz1jta9
      omtgTIwNdIm9rR1CCCFa9+4UwxNhIYQQgz2HxNZXdohUNj8T/5YdR/sQ2VRMvLL1JXGwo1cI
      IUQmGREvb90qQuGQ2LzpZZFRhAhNDIuXNm8Wg2NBIYQQXYdaREfvcMH4Xn7hKfH9//mhONjW
      LpbXeMRTO/uOk3ViuE9sOTYNqiIO7HlV7GvtFKoQxz2fieHeo+EPdB8SO/YcEL0draKjd3g2
      rF6xq+WQSEeDYseuFjHYfUjs2t8ujjTZB7oPiV372kRPR6voGhgTQqiiZfcOcahnULTu3SkG
      ZtMzNTYotmx9RcRS2Zk2fMsu0Ts8cTT/EtnX5R/oOiRaO3pFeGJY7NjVcvR5zIQ/QyI8IV7Z
      uff1chGZElteekl0DYwcl19C5MWOLTPlQ1XyYu/ObeLV3S0ir86kYLD7kNjf3nXUXzCamr1/
      n2hp7xbdhw6Irv5R0dG6VwyOjIrtr2wV46HY0fw4kr6ewwfElpe3iXjqmIQIIZR8Ruzc9rLY
      3dIuVFWcsvwce/+x5UcSQvsSfCK9B1/lU//4z4wGo6y58W4++6mPYZhjTahxeaApgMZVjfYl
      WOOqRlMAjasaTQE0rmpeH4tTUvz6188SqPQzejjMkmULEHaBLNlJTg1Ru2A5h17bjr2kEgtJ
      jK4iRkdGWb50EZ0HWwilBYuaqhidipCOZjDoslTX13OwvZsyrwXZXkRwpJ/ayhJ++/yr3PfO
      m3j6f36Bd9kKiv1+yt0GesYiZBMxSv1ugok8Dn2OrGzHZjNgkHQMD3STjwnyxS6keBi7yUrN
      /EWoiRBDoTRScgp7cTWTI4MUex3E0wrJHJQXe5B1MrlE7Gi48egU41IZq6ttR+8VuQghSyPz
      S6zkpnponbbgM8ksam6k9eBBbBYD7pJqWjc/gaH+92gMmEhEg9i8RQwPT7CouZGh3k7MLh/9
      g6P4rdDW3cPCZdeSmhrBXVzKxESQxc3zGeg+jMXpZnAshNUoYzRIxCJJyst8xBWBEsmTEgpu
      i0Le6KOmPMC+3bvR2Z1UFHnJJafY3T7GLRtWsP9QPygx9JKZhvpKRkJpaopMPL+tlYpiH4sW
      LyI0NkBadhAc7md8tId5zcvBoLJvyyGK60pwBxxkI0kyiTiukkqaGgL84jtPULtxLW6Hh0x4
      jEgiR2v7Xu5778P0HtxFaWUNE6E4DeV2fv7TH2Fr2MhNSysYDqVprHGw+5U+TB4LRU49SclG
      NtTJawfjXHtNNZLRRzY6hr+0HjLTTCXyhEJj6ISOmoY6DDodY4P9uIuLyWQE+WSCbCaCr2Ie
      Prue9q5B4okIVqOJqlLfjK1aamr2/zJtHUNHn11meoyquloOHOqj2C4hOUpxW/RYzfLrCpAN
      dmOoWEZjXZ7xA9387LHn8K0ro8KQIjIwQv+0E0JTEE4g5WMMTz6LbK6ieekiDm1/lqDJywuv
      dfKH9y9jx6tttHe0U1JWS3dwgo3XNpMd38yu7iiStYhF5S4gRV/rMEp1LcnoNI5AhrZDIdo7
      BjA7Smgq9zDY34YpnyNq9FG7oIZkRwudvXnmr5hHxjTNaMswa24zMtX5KmHFSMBmYfJ3P2Jc
      KcHiKqOhyIqiCIbbgpQsvYPBfbuQjBby+QyZkRaKbv5jXnzxFVRJIPIQGnqVWCBFvs7BigoT
      m7e8ysIKD9XNjXT09DHS145VpLCVNdK/ZSfT5VbSIk0uspXBaUFDcyN7Wg9TZDPw1L4OVs2r
      IJVKs/+136Bk7Gz/zuM037KGxc3z+fVvn8RGkpSuhozfyyJPisnBGGPhJozGCJv+bw9LNi4j
      bcwS0BmpKb+T6aFBJrN6Dntk3GoSo+ynp62NX21+lesXFjM5GGNXax9FDonGu28ldmgzHdGF
      pJzVHHr+1xidbkQ0jfAVo+84wMD4ADYR4FdPPM36m+cRH4yRNHgpCSdoarDTfXAc17Ig4eF2
      dr3SSlLnYfGaedjkBAdf3crz23uorwmwoPEa5FSIUO8+vrZvP36XkcaaW/jFT36Gf34N8xoD
      TAz34bGX0LJrANkex5sNksi6MI8byY7tR2czk40OM9A/SsvwLTR5w2x76SBJxcJHP/Wn7H3u
      BaYzcYzDE7iESsWK1ex69lGGM37KqhuIRUOU+Z0YhyewKwn294YpqXLjUSO0tIwxrZpZsLSO
      MYPAbenF4KzDp4uje+SRRx4B0Nn9jHfsIiuZqSivwuvzUTe/hjKvm4yio66+juKAh4Dfh6Jk
      KAqUYbDaaayrQgLK6hqpKvUzEZymtrYZtwNKq2uxm634/U6KKxdg0QlWLl9ASpFoqK3CYDSQ
      BfyBAMV+H77KJsgkWLZkCeUlfooDbioWrqS6xEmxp5S8ENTV1yLsNpY2NeGxG6mZt5DKEhcY
      7TTW1VBRPw+jTs/SxYsx5yfZdngMl93B9RvWYDQYCfh9WAx5ihsWYjaaqSm2kdHZqK+pwuf3
      4iCNp2EVJR4HJoNMTjayqK4KvUFPscdNVfMqUtMh6usrEbKeEpcJd6AMg83B/PoaUuFJkoqE
      1+WneX4jFknFXTIfOTNN87oNNFSVEvB4MCAIVNRQXz+f8soSSt12knmZ4mIvVoebhQ01JHRG
      ljfV4/N7CYejeHxO4qpEldOKbPXjdtpxuWyAica6SlJ5mSUL6xBGO1XlZeRlE7F4jmtWLsJh
      MWB3eBCynrqqUlT0BErKUOJplqxfT2WJh3ReZkFzM2XFPjw+DwaDjKLT4wlUUuSaedbVlcUE
      3C7GghHKSwM43G4qy0uJx+M0LFhCTU0lVqudmsoyfG4feqeDErcNT0kDJl2WysZGFsyrI1BS
      zsvP/Ir6VTeSnerHV1lPWZEHncVNiSWPe956ApYcNQuWUl9dggwUlRbj9/lorClnX1sPi5cs
      w6jTU1VejNftp7GxFr/Px7yaamJ5WNLUgL+4ErfdSFNtOb/espt7bruJsYEhVmzYCNnE68Og
      SiZGTDEjMlGUVJKYaqK2oui49lI4PIXH45tTG2vmHifhqTQen+Os2mmnIhKZRlWVk2SaCofx
      eTxHzzvb9hOons9wXxflRR4mEwKLSGIvrsZtNR6XLqFk2L3/EIvnVTEYTFFdZCWtc9B/uJXm
      xUuQJeg+fJCi6vlkY2GEmkGyeDAIgdM18wk4m5xmLJKnxGngYM8ItWUleHyek+Q6m+cJCsHg
      NH7/G98XnAzinzUJOBOmIxGMQkXn8GA6lZHWKTiSjvBUGI/Pc/obLiKTwSABr4tIPIfLaT2m
      CTTZybd+sYeGxnpMg7vpNC9hqT9NNhmmeyLP/Q89zEDvHg4+dpilt99PpGcnOYwkVZl0eAiP
      z8vYRJSiuvmYsiFEOk9vJIExM0FxTRXDe0MYyt3c/667ePx/f0BRwMfASIiShoWYcyFik1NE
      JSsOU5Ibb30Xr7zwJNl8jkg0h9nmRG804dClULJxMvZqkkMdBDM5li5ZQLCnh0TOSsZq4OF3
      3cNP//cHlHr9eBqWsn7NYrw+N7/5ny+jd9cyvngD0c7dGE16cq1d3H3H7ezZvZNsKobOVsr1
      qxaTnezlh51DFJlVgroxYtY69rf2UlS/iCKbDEqcLVu3s/PF57n2xmvo6+5gyfq3sW5xBb/4
      8U8ID8dY+/6H2PvC81yzbBlPP/07rG4/tvwgh0cF665bR2/3ANVOmNS7eev1a3j6Vz8jG88w
      krawuLmEWBIiU/04DBJjk1kWr1vLmsUL+M2vfsrIwAQWbzl2t5VEeIqy8iri4/2E9S6sOj1+
      KwxOpFmxpJHRUJgip5H+zk5yrnLKS0q5pt7JVx79NSaLl0WLyolHkwxMhrmhwsGmgQTzmxoo
      cphxZKfZPRgjlkjhcuqQ9VZ0qSDBhJ6SUt/RcLvjOcoDZXjVOFPxDCtvvYfpnr1MJiE8tBef
      t56JaBKrw4TFYCCRTVLtceGuX8tk1w5cHj8te/YjF1cyr8jOUGcvZrcTi9FE30SM8hIbxaWN
      VLr1PP7cNuorPfhLGgkYUuzoC2PLBDEZZHa1DWCyeCkps2A0uHHrI/R2BvHVVhEMxakqd3Gg
      Y5AP3LGKHzy2A2eZ+4RRICVN79AYAOGpMMHJKSaGeqkq9xBKQjg8TkVFFcHhEHnVRC46SltH
      L46iCoLDh9ixay+pUC+dbb0Ek2le2r4bIcmEI2GCE0Ps3deGAoTD00wM9RGNRgiNd9PZ1kva
      YGbvvjZ0NhcOs47JYJCxoS527NpLIiPj0OnYu3MbI8NDOC0Sm7e8hGJwEw6NMhWK0jscxOOd
      qWFkScbkLaKzpQUDgv999AcsXHUtIyNjDO7fREbvJBkJotNJTCdnDPQNVgc6NU4mPs6LLQOU
      O2A6kaOxsRGjxYZFztA7PPNsgqEkoaHDYDKy5JoNNJY4eXl7CygZpkJRhJBwOh3YDDr27D+A
      zuLFrpMZH+mjqtzD1pdfY/f+dqrra9m7ezegsHPbVoaHwpR7vLR2ttLRO4zfZycYDBPw22lp
      6QAUwlMx0okpdu3dRxozJaUBshO9vLB5Cx1jEbwOHeFQGJPJQG2Rge7WboZCYV7YvIXJqRi7
      W9ohl8Rf5MSInbbOVjoGw3gdMxay2USEdGycpLCTnE5ic+jZs7eFrM6KTpdl57atuKzqceEO
      B5NEotMo6Rhbd+wincnRO5uGoooKhg/tYdfefWR1NpRMlHA8T9uhPmrLHJCJ0XqwlVA0ykBX
      D6/sasHm8hOdmiI4PsSevS3k0zHaO/sZ6T7Elq07SWdmzsPjQbKqwsTkFOHx4aNpGp6eJhoJ
      8eLzL9B+oAenS2LP3hYmp8IYDSasbg/p0BTR6fDF+RLc2dNDY13dG/o5uGcHlkAN9ZUnW02e
      CdlEmL5ginnV527SSzgcwuOZ+wSUs0ewZ8dLWF1lWFxeqsvOvEnzZjjc2kZ9czP682D+MdRz
      mImEgkkHC5ubz30EnFn5OoJmCqFxVaN9CNO4qtEUQOOqRlMAjasaTQE0rmo0BdC4qrmqFODJ
      H3+XRz7zGV7ec2jO9z73zDPkgGSw76QFnC4kUyM99I9Hj7vWsv254xYu0zhzrqph0I//8UO8
      /Z338fhT21lZZ2ck6yYggvSMTnHHO97NM0/+gmUrlxPPGTm0dw9NTdXkE5N0hWSYaEe1+bhl
      w3K2DSjoxw9TtnAdH7j/Dn763/9J60iWZRU6drQPs+Etd7N/028pW7iO7p1PsXj1deze147d
      baGsuBariHPvgx+ifeuv+Pnzr1LetIyJw/uoW7mRzh1PEU3Cu951F79+6gVuuXEdP/7lC9yw
      fjmv7thLVZGehGsB0mQ3dSs3kujeyabNL/JX3/wt9foR/unfv83CNetJR5NI+QTlATNbd/ew
      dmkl27rS/Mtf/yHf/a/H8FsFss3Fjp17uf9dd/M/j/6Am29/Gz/66S+5ZvkiuvqH+PvPfQGf
      ZY52EZcZJy9NcIWz4/mnuPaWB/jhP/0Z/ppVTPpM/MFd1/H9xx6lc2wavbeG6f1PcGDKS9Zk
      xJ6eZEdLH9csrOHh+2/hez97FlXSsf21Q6zO2+D+O/jpz/4Pp78GY9zFAw88xHe+9332tfWz
      Om9DzZopkqdZc9u9vPirHyIno+SNPiw6eP43L3H/g/fy5f/4b3pGIsT1XtJJPWtr9Xz/0Z+Q
      lyX27dvDgmtvJTq6i4G27Sxe+jA+o8wPnjlMXO8lGZ7g1uuWAbBr6zOsvfthtjz+3wScKhlT
      Ja+9+CTC5mYPEd7yvr8FSU90rJeOvBEx9ixRYWPL1u0kE1F27t2Hp2oFFV5B+6EIg+MRfDUX
      8sPfheeoNejVgGww8eAHP0z7/v3cunENxU3LWT6/nvqGBmoWr8GmRLn1zndQV1HK3W+/g/r5
      yzDmI8xbuo4VC+vYtruT9z1wHyW1S2jywtob3kpNeRE15QFMxU1cv2I+ZTWNeCsaaQ7oWHvD
      W6mtKGJRYwUf+7O/JVBRRZ01RtPNDzG/0kdisp1P/dO3WHHLu7m+wcP6W++kqtRHY2M962++
      nVAwxDvuvQuvrwi/RcVZ1sh1GzYQjOdYXGpj/a13srDUSk9IZd26a1nQvIBNv/wRt9/3ICub
      Kpm3YgPXrW5mOu/mjpvXUlxWg9tqYOjgFhxNN/PAnTcwOp3nnXfdTDiRZ/Wy5dTW1dBcW8zQ
      VJqbb9qA2XBlt5KvqibQxUKoeV7bsYPa5uWMD/bQvHgxMpBNRnl1z0FWrb0GywUsaO0HD9DY
      vBj9lV22zwhNATSuas75O2Au+nSx/V7s+Ofi93IJ83z5PV/xn9QJDo0P0drRh04nISQja69Z
      PSerQFVV0enObORAUZSCSwReKL8XO/65+L1cwjxffs9X/CfVAA5vALtJJpXM0NjYAFoDSeMK
      5iQFMBgMFJX4yeXAarNqHSWNy4qDvRN88Sfbz7gZVKCeUDmw7xClNTXk8so5Fk9D4/wwFU3y
      g6f3I8sSH7xjOZJ0Zu32AgqgoyTgYNvLL2N2l+JxWM+xqBoa5458XuXJbYd57dAIv3/bEhZU
      B8jnT72XwokUrAFywsjK5UswG67sz+Aalzd7O0f58QsHuWFZDZ/74I3o5Lm31wt2lZV8Fsnm
      ocjrfNNCamicaybCCb7/9D7sFiOfev/1OG2msw6rgAIIjDYb/V0t6PROVi09s8nFGhrnm2xO
      4edb2znYM8GDb1lGY8Wbt1MqoAB6UrEITm8R5ZWlbzoCDY03SyiaYmf7EC/s6eO21fX848M3
      Ip9hJ/d0FGwCrV57LaMTQRwWbQxU48KjqIKOwSl2Hx6hrW8Sh9XIsoZiPv3QRuyWN97fba4U
      VICW/XvQmx04PAGwFPKhoXFuiSTS7O0YY1fHCJPhJPMqfaxsKuX+mxZi0OvI5/Nn/HV3LhQc
      BXLarBzs7MFTUo3XOTMMOtnbQt7byFjXIexWM/FsCqPRQSqVorQ0QCaVou4MFyPS0ACYjqV5
      akcHrX1BzEY9K+aV8L5bllDiLbTN5vnhJGvQ4MQImZwgn88jI1FUUTWzWGp8lNG8jXQ0RWy8
      j+LaCnr7opR5zSTzaXR6G/U1FSiKcsYfIVRVRT7Doavz4fdixz8Xv5dLmGfq96V9/fxuZzdv
      v66J5fNKMOrfeMj9fMl6kgKouRS7du9DEeD2l7KgsQaAkcE+FJ0FAzn8JeWMjYxQVuJnLBjF
      53GiKAoWqxVVUc7YGG4u1dr58Hux45+L38slzNP5DUaSfPvJ3ZT5HTxw8yJ0UuE9ky+UrCf5
      UlUoLp1ZT9NX9Pq6nGUnbEJcUVE+c70kcEYRaVzdCCF4blcPL+zu5eG3LWfe7G7zc/lqez4o
      WE8cbNlPLh2ivWP0QsujcQUyHo7z2R9sYXI6wec+eOPRwn8pcFINoDdZWL9qEY8//RJ3vP3d
      F0MmjSsEVQie3tHFywcG+NAdK6gru/Q2zyhYA/QPj2MzKoyNBS+0PBpXCCPBGI98fzOJdJbP
      PnzjJVn44RTDoFOhaeoamjBd4SsCaJw78opKKJoiGEmyv2uMg72TfPiulVQVuy62aG9Iwa5y
      WVk5OfTUVBdfaHk0LlGiySxjoTDBSJKpSJJgZKawx5IZBKDXyXidFvxOC+V+B7tGkGsAAB3M
      SURBVPfdtPCsrDMvNAUUQCYRj9DT20FGtbFqSfWFl0rjkmE8HOeJl9oZnowyvzowU8ADTpY2
      lOB3WXFYjSd998nn85dF4YdT1AB2h5fV11yPu0gzhrtaGZ2K8fjmNsKxNO+4oZmmCs95MUW4
      2BRMkcMms/tgFysdxbht59b4SOPSZmgyyuOb24insrzzhmbmV83sS3axx+vPFwUVIJ5IYTbk
      CYcSlPm1STFXOrm8QmvfJLsPjzIdT3PX+qZzYmt/OVBQAcx6idf2tPLe5RsvtDwaFwhVCMLx
      NK+2jfDS/n42Lqvm/bcuwXiVTYMtqABjk2HWrF6F8fLox2gcg6oKhidjRJNZwvE007O/cGzG
      zWRnmjKSJGG3GFjeWMoXPnQThtMYo12pFFSAqupq+scmUbJXZrvvSkMIQc9ImJf299PeH6Qy
      4CDgtuF2WChy25hX4cPtMOO2mzEbX8/y82VjfzlRMPWpVIq+zsP4ShovtDwac2AkGGNLSz97
      O0apKnazcWk1D71lGap65ksDXvIIgcgmELFxlGwUkYkjMrGjP7Kx489zaTA50d/1H3AGZvkF
      J8Wb7E78Hg8W08kjQJ2HWykqqWBoaITKihJGJiOUF/vJ5bJ4vVdHx+liEoqleLllgFfbhvE4
      zFy/tJp3XL/guCaMql54uUQmRr5/G/nerSij+5CtfpB1SCYHkskJ5hlXMjmRzLOuyYGqquQz
      EdREEJEMIo646SgcsdQ32cDiQ2f1gsk+G6YD2VmGZHLA7LlkciDpzeQV5YwKPxRcHj3PS5tf
      obrUSTjvY/nCqmP+p7J/927sNhcl9UW07B2hvtTBVCqGweCkrrpMmxBzHvyGoikODQTZtG8A
      WYJrF1awtrn8uObM2cT/ZuVUp7oQ/a+gDO4AJKSKtehqN4C7ZsavUGbezOkoZGKITBSRjs6+
      rWevqXkkqx/Z5key+ZGss67ZCUhvGP+5SFfB/QEmRwcYmkqxbFETxxVlNUdnZw8Wi4mpcASP
      z084EqOiJEA6naasvFybEPMm/aYyObqGQnQMTdExFGI6lsbntFBf7uHmVXW4bOZzFv9c5dSJ
      LMrAq+R7t6BMHkb2N6CvuR591TVIJvtxfi+XvCroK5/Lk5ga4bX9gjVL57/+D9lAY1MTABWz
      FUNVxRnFo3ECQgjS2TxDExG6R6bpGJpiJBjDbNTTUO5lXqWPm1bU4XHMFPhz2WEV+QwiNoYa
      GSaXiUI+hcilIDfjivzrx0ev5ZJIOgO6ymswLLkPU2D+Gdf0lzIFn6hQFQx2L9UeK0kFrFfn
      CNmcyeTyjARjjAZjJNI5YqkssWSWWDJDLJklkc6iqgIQiNQ0xswkxR4b8xcu4d7rF1Dud7zp
      QiWEikhOoSQnUGNjiNgoanQUERtFpKYBAXoTsr0EYStCZ/MhGSxI1hkXgwVJP+sec65I+iun
      Y30MBVKk8Owzz1JcVY3TGaD4Siz8QiCUDCIRQtUbkWQdSPLsTwfyrCvJSJL8eodKCISqEIom
      GZ5KMhSMMTwZYyQYJRWfxpiLUuo1U2STcMoJStUIDSKKXUSw6aLYHBlkiZlwyzxItgBCDUFw
      N2JomhSAzoBkL0K2lyA5SmbdYoTFh5pPIZLBmQ5jYvJoh1FNBCGbnJFRksDsQXaWIjtLkZzl
      GMpXITlKkS3u4zqHc6pVriZTiGXLVxJNZ/H6HBdanjeFOj1Ivm8r+ckOcvkUZJOIXBLUAsu8
      600IJGSjFRCgqgihgFBn/AsVoSoMjE9zOOakM19JUCpCclfjteooM8UpM0a4zhihtDiCqUwg
      yXqQ9QidCZ09gGSrR7IHkGwBZFsAyWg/aXTixEIolCwiPvv2jo+jTHUi+raixsbJm52vdxZt
      AWR/0+vnRitHOo3a+P6ZU3B5dJe/iCXVxfQPxsF7/pQg/+o3yA7tQvY3oitbjq58ObKzDDiz
      ZoDIp1EGXyPf9zLqeCuSqxx9zQYMS96NzuqeKRQG28wbvlD8JxSUbE6hc2iK9v4g7f1BEuks
      VeUuFtQEeE+5h7KA84yW5HszBVDSGZFcFciu4ztXWqE+PxQcBQqO9HPwcDcLV64n4JzbyrvK
      HEeBdLKEOtWFMrwHZWQvanQE2VGCrnwFurLlyP55SPKRlcF0qOF+sn2vkOrbSSYWRilaglK+
      jrx3PllFkM0p5HJ5DAY9siyhkyVkSUKW5ZnjI9dkCUVRGQslaOufpGsoBEBjhY/maj/zq/04
      rKbjZL3SRqwudprm4vd8xV9AARQO7N5DOJGiadFyiudYA8xVAQoJmgkP07t3E90HXmMg7WTE
      uYZsbAoJgewsQdabMBp0GPU6TAYdRoMeo2Hm2KDXgRBIkoQqBKoqUFSBqqqzrkARs+eKSlnA
      SXN1gIYK7xsuznQlFoCLnaa5+L2Aw6A68ukIU5Hc7IjF+SUcS9E3Nk3v6MxvcjqBQa+jqmgB
      teuv5ZZSN5VuHXJiDH2gcaZTehrOx0PVuDIpOCk+nMjTUB1gOhyj9DzOB/jJi20MTUapLXVT
      W+rhusVVBNzWgkOBeZPtjAq/hsZcKPj6M5lMuN0+TLbzOxnm3Tc1a29gjYtKgVeqTFlJgO7u
      LuLpK3PsV0PjCAXbFBarBYvdgVHSdsnWuLIpqABH5gOkFU0BNK5sTmqAp2MhBsdClFbU4jjN
      ihDhyVEGxiNUlAbIZDKUlZWdN0E1NM4HJ9UAZocVp92By+lktG/wDW9OZPKUumxMTI2TTGu7
      ymtcfhRoAukZH+6jp7cXV3HRG97sc9kJZxUqSivxum1oDSaNy42CphBny8zXVeWymGV1KcQ/
      F7+XS5jny+/5iv+cDsLLsowQ4oxNIYCL7vdixz8Xv5dLmOfL7/kI85zWABoalxu6Rx555JEL
      GeFgXzepnGB0oAe90UR37wAmvWBofAqv+5i15JUMhzu6kJDoHRjBKOcZmZxGSU2Tl23H7V2Q
      jE3T1TOILOWZmIqSik2RyChMjAyi6ExYza9bdQYnRhgLRklFp0jmJcYHuxGygYG+PuweP3pZ
      ekNZ/QEv/X39uN3u08qajoWJpfI47NbTyCoITQwjGa2YjpnofqKs/f0DyOTo6h+mOOA/TZgq
      48P9oDdjMRtPGeb4YDcqOgYGh3H7fByT/OPSLxvNBEPTyPk0g6fJK7MeYskMycjEafMqFw+i
      mlwM93acJq9gcnwcm1lPZ1f3G+bVEVldDht9J+bVCVxw4xqPx4OUnMBS2sSh9nbmldo4PJqc
      2Yr1OMmM+LwuxoIhar0m+sJZDJKK32sjkTp+xMlid2AzGYilc+hQyKMnl07g9XqRT+iau5xu
      DHoZRTaQjfRjdNeQTEQhkyBzwnePQrK2dg2RyJ6w7sgpZE0k4qgnrFFSWNZJRkfCZLLZN5R1
      XqmNrKkIzzEKdeowI8RiceKJ5GnTPz7ch5QNMzyVPmX649EoekklEk+fNq+yFi+5TOqM8irg
      MhPPSqfPq2Qcs8WE0WI9bV4dkXVqfOTkvDpR9Df873mgt7cXYXYTHmijrLSctv4QZS6ZaCJz
      nD81G6V3aBK33UznaJSAWSWeyjI2OkkodPzWTZPDg8SzOXRCIZHJk08nUCWJ3p5+1BMm1wwM
      9JPLK+RSMYTJT3S8C9AhGU2oueMzq5CsHqtMfHqaY41ETiWrzWojnTk+XYVlteP12cie4PdE
      Wdv6QzjlGDZP0enDFBJ6owVZPn36vcUV5LFS7Dl+7sex6dfpDYyMjKCoymnzitg4IxNTZ5RX
      I+NTTE+Nnj6vZB3jwyMMDY+eNq+OyBrPKCfl1YlofQCNqxrNvljjqkZTAI2rGk0BNK5qNAXQ
      uKrRFEDjquaCfwi7lPm7P/8TXnrpJcLCw4K6uZl2f+MbX2X16rV0vPoce4YV6it8x4W7dftr
      2ItqKAuc+qPMyWR47933ct3N13Lv7/85JW4zVQ0NFPrI/6P/+g8mFQcVbh1f+PwX+M1zW1Gj
      fcTtdZS4ZJ555kUaGurnlKarAW0Y9Bjuv+s2mpcspahxFc8+9nUsjdfiyfSQzQk23HYP3/7P
      r/K2u+5CFTIv7uhg/bISjMkQ+0N2ShgA2Ux9QxOyo5if/eh73HrfH/EPH3+Q+++6jQUr1nH7
      jSv4h6/9jGJ/CWXSENs6M9y9roJp31LGX3uB4ZEECzcs5NYVjSSLr+OudRXcdc1yGq+7g2cP
      DvLW5nJu3rCAf/3vF/jP73ybUsb4s3/4Mo6iUrpfe5F/+Mr/EG97mumyW9jY5OGFx7/GpvYo
      xXWLme47xFDPXoRi5qOf/BhfeOSzfOwL3+Ot1zRc7Md+UdGaQMdQXLOIBWVOrFYDMWGlxOfC
      5C7hvffcQltLKyW18/FWL6V90/9RW23HbHXx4qsdxKdDyDoDC+dVMT4VJTo1jrukFqvJAIDN
      XcQNN9yAWcqz7pa34zcqjAajNNWVIVR43wPvICfb8TutvOP2a/j772yh2RXlm48+QcPqjTz7
      uy2say4GwFdcTDKewGE1kwiNYSuqJxWNsOCa61nVXEN1fSPbnv8N3/ve90jkBO966EGmh0cA
      KKlbxC0ra/jdU8+DwcBUKHrRnvWlglYDHENnZxeN9dUcbO/BblTQOUvIxKbwu2zk9E4GO1tp
      WraKsd5uXF47is7J5GAXJocLSckQjadpqColhZWJ/naqmpbhshnZ99o2phNZqqsrkUxO8okI
      XoeJsZiK25DFXV7HRx94K6Oikk88fCOvdsv8zUfeAyh0dfUBIFCRkVBVFb/PRTxvoLLYS2fb
      PuxFdSRjU9TX1gLQ19lGWrbjs6gYnH6C41Mg8ggENr3AYHMxMTmJy1dKRfHVvauPpgAaVzVa
      E0jjquacK8CJ1o8aGpcy51wBtBaVxuWE1gTSuKrRFEDjimU6naY/+sZDvZoCaFyRdIbDvDQ4
      hNv0xhu8nPNh0LlskKGhca7JqyrbhkcQCNaXl6M/zfIoZ70sSioeoaWlDafHirekjkMHDrDx
      +mvPNjgNjTdNJJNh88AgzX4fjR7PGd1z1gqgM+hxWM3obUVM9LThLy9HVVVUVdVGgjQuOL2R
      CAenQmysKMdpNJI/w21dz35hLFVg9gQoL/aS9zrR6XVntTCWhsabQVFVdoyMklUV7miox3CG
      K8IdQesDaFy2xLJZNg0MMM/jZb7v7GyaCtYAwbFBBsbCLGhuxmLUtjDSuPToi0TZOz7O9ZUV
      +CyWsw7npPpiYriXiZhCc2Mtrfv2oK16rnEpkcnn2T48Qtd0mLfV172pwg+n2Cd4785XaOsY
      49a3vZWAxz6nALUmkMa5QAhBPJcjmEoxlUoxlUqTyucw6nTUuVw0+XycvJfo3CnYvgmHplFF
      nkxO2yRP4/yjCkEolSKYSjOVShFKp1GEwGE04LNYKLbaWOjzYzGc++Z4wRBtdhd1Dh+m8xCh
      hsaxJLI5XhwYwGkyUmS1Ms/rwWM2n/YD1rmiYAkfHRrAVV6PTqdZSmicP4ZjcV4dHeX6inL8
      VuvpbzgPFCjhEuUVVQz3tjMRTlx4iTSueIQQ7JuYoGVykrfW1V60wg8FawCJkupqorEIDov5
      wkukcUWTVRReGhzEbTLzltoaJOlcdGXPngI1gEJPdz/1dZVMTIYvvEQaVyzhdJrfdvcwz+tl
      dWnJRS/8cIovwZOjAwxNpVi2qGnOQ03aMKhGIbqnpzkwGeSmqkqcpzFRvpAU7OWqikIsNM5E
      KHah5dG4wlCFYPvwCAPRKHfU111ShR9OMQrU39dLNquiqppVp8bZk8zNDHHWulys889tqckL
      RQEFUHA4PKTV2Enb62hc3UynM0SzGVQhEMyM5qgCBOK4Y1VAXlXono6wvryMYpvtYot+Sk7q
      A0wM99HVP4okgRAyK9euPXlTNCCdiNA7MIbbacVdUsH4YD81NTVaH+AKJJXP89roGIlcjhKb
      DVkCCQlJAlmSTnlcZrdj0V/aH1PP2hxaCJXh/n4UvYyaSjEWU1m7bD6KolwSvXuNN48qBK2h
      EH2RKMsDfiocjost0jnnJPVMx0I8u+ll3E4rZXXLaKjyF7qP0NgQ06ksPp+fWCJNTblPmxBz
      hSCEoC8SZd/EBPO8Hu5ubEC+Ql9qBWuA3sMHGBgdp6x2KY3VgTkFqDWBLm+CyRQ7Rkfxms2s
      LCnGdIXnZcEGmqKqKKpCPp0p9G+NK5BkLsfO0TEyisKGinJcl9hw5fmioAI4HE5SXb24i67u
      pbOvBvKqSsvkJAPRGKtLiim/Atv5b0TBYdCnf/sUxVXVTAenKfVcPEMljbkTz2Y5HAqTzOfI
      qyp5Vcy6KuopxjvmeT3c1VB/xbbz34gCCqBjw8YNtLUfxmTXCv/lwlQqxf6JSVL5PM0+HzUm
      J3pZxiDL6Gd/V2MBPx2FB2n1FoqLPWQTKWAum7ppXEiEEAzH47RMTmKUdSwtChC4iKbFlyMF
      FSA63s9wKEflvEv3C97VTDidZv/EJLFslkUBP7fX1mrfXs6SggpQWlVL1jiJktXmBF9KjMTj
      tExMIssSSwOBS9rE4HKhoAKkUin6Og/jK2m80PJonMB0JsNgNMZgNIrDZGRdedlVM0R5ISio
      AKqqUlpRi8NmvNDyXPVkFYXheJzBaIypVAqnyUSlw8GNVVXnZVWEq52CTzSTTpPJZFA0c+jz
      jhCCYCrFYCzGcCyOJEG53U6zz4fPYtba9ueZggpgNJnQ6VQiU1HK/M4LLdMVRV5VSeXzpHJ5
      kvnczHE+TzKXJ57Lksrl8VstVDocLPL7MV7hpgeXGgUVwOVykerqxVvsu9DyXJZkFIVgMslE
      MkUwlSKVz3Hkm5NOlrHq9Vj0eiwGPVa9noDFgsVpwKrXYzUYLq7wVzkFFCDP4OgE2WSUwf5R
      it11F16qS5i8qhJMpZhIJplMJollsxhlHQGrlYDVQqPHjc1g0JoulwkFFEBPKhbB6S2ivLL0
      wkt0iZHI5RiIRhlPJIlkMsiyhN9iochipaakBIfRqBX2y5iC5tCJRAKr1cYb5WsmFadvaAKj
      EsNa/PoWSVeCOXQyl6MnEqEvEkEnydS4nJTYbLhNJq2wX2EUVIDI5Ai/ePK3lNUv4qaN69Cf
      Is9HR0eRgMmRAWR3CQtqKy/bGWGpfJ6e6Qh90ShGvY5al5sqhx3jBVqjUuPiUFABulr3ElXN
      FLnsFFVUYixQBtLxCP3DY5RWVKMTCjq9DrPZfFnVAMlcjt5IhN5IFFmCOpebWpcT0yU+j1Xj
      3FFQAXbveBmXx8amZ/fxrj/+A9xzKA/nSgGEEITSaULpNDlFJasq5BSV3KybVWePVRVmU5BW
      FMyniPvIRO0jv6yioJdl6lwualwuzFqhvyopqAA9h1oYDiWZ39yM3+2c0+pwb0YBYtksQ7Mf
      hGLZLF6LGZ/FgkmnwyDLGGddgyxj0Okwzpr5nkmTa2bZDoEy6+okCcNlUlNpnD8KvvbMJh39
      Pb3UNCw4J7twnIpUPs9ILM5QPEYolcZhNFLusLOmtBSn6dyaYUiShE6S0Iq8xrEUVICxiTCl
      JXbGh4NUFrnOaYTxbJYDk0EmkkmMOh3ldjuL/H68Zu2zv8aFp6ACNNbX8uQzgyxdW37OI9RJ
      ErVuF2vLSrUZShoXnYIKcLirh4ULFyAL9ZxHaDEYsGif/zUuEQoMcKoE/AGi0QixmLZDjMaV
      TYEaIEtndy95FSbHJqkun9vCWBoaFwIhBOSjqNkgIjs16x57PIVQEhhL78VYes8pwymgAEYq
      KyrIqlBRU3P+UqChcQaIfBwl0Yka70RJdKAmuhFqDiQJSe9ENvqRjD4kox/ZVILkWDhzbPQj
      6a1wmnHMs14c91RcTl+CNS4dhJpDTfagxDtREx0o8U5EPoqktyHbGtHZ5qGzNyJb65F0525K
      qKYAGhcOIVBzIdRkL2qyDyXZh5rsReQiIOvRWWtnCrt9HjpbI5Lh3A7BF0JTAI1zihDqTDs8
      M4aaGpop7Kk+1PQYoCIZfOisNcjWWmRrzczPcPHWntIUQOOMEWoWkZlAzYyjZsYRmbFZdxw1
      GwKhgiQjG31IpmJkSyWytQadpRbJXIIkXXqWtZoCaABH3twh1MwoIj2KmhlFTc/8RC4EQoBs
      QDYVzXQ2TcXIpuJZtwTJ6AUEeSVNXk2jKGlUlDOMHFSRQ1HTx9yfIj97PnP9yHkSAKuxGLPR
      i8Xow2zwYp51ZXluRo1nv0OMmmd4NIjLZsbqchONTONxuzUFOM+oQkFVsyizP1XNoogjx5nZ
      68e4SoZ8Pko+H0VRkjOFKR9DyUXI56bJ5yPk0+MomVEUNYMAVMmA0JkROhvC6EfoHagijxB5
      BKcuLhIyep0ZnWxBrzMhSWdeGGVJj162zN5vRq8zo5ct6HRHjs3odBb0shkhFFLpIPGpfuKT
      vcQn+0klxsioESS7Gb3Tgc5lx6Cz0eS/j4XNHzq1zGerACOD/eiEQiibx2Gx0Tswzvq1y46b
      EHOsMhw5DkUO0jb6/TOORxUKsnSeFUqcfCJO8CBEHlUoCKHMFgZl9vzY6zOuECoCdcYVKqgq
      CIFQVVDF7LUj5ypCUWeOFQUxez5zXYHZ/wlVQWTzoKjIqoykysiK9PqxKiOrErKqm/kJPTrJ
      gE7SoZON6GQzOp0dvcGJTragk03oZRM62YQsG5ClIz89smxAd8K5LOmRZ0fNhRAzNYI64x49
      P+EYVT0+PUfSryqgHJP+2bSKfB6Rf909+vSPKaKqqs4MbMoy2CyYvB70LgfYbZh8bvQuJ5Ld
      isnnQTgMoDdgNMysl1qoPJ61EbzRoGNweAp3SSnB0WFKSwMnbZGkP8bG/six21xDo+72kwMs
      MFwrJBA6FTlfSAGkU9x3JvZFc7dBkoSEpMqzroQkJJh1JXX2N/uHmP2/kGYzazaQi1oxnup5
      zV489rokHe/tWJstSZr5/8wEi9ePj/kdPZclJFkGWUbSya8fH3PtyLmk0yHpdUh6PZJeD7oz
      M3OfC4XKo9YH0LiqufS65RoaF5BzXgMIIVDVU1uRCiHmVLWpqop8hhPT5xK2Fu7lGe65Dvuc
      T4SVJOmcNoEkSTrjxGrhXvnhnuuwz3kNoKFxOXHJLYWQjE3T1taNK+AglVIxSVkkk5NMMsri
      xUvOPmAlw6HDh0nndYhsBpvHSTKZpdhjZSKSZunC+Wcd9GBfF8lUilhKwWIyks8k0dvdmI0m
      6msqzzrckcE+ppNZ8skYFrOJSEqlvMTDwEiQtauWn7NwY5kcEgZQFRYuX4rxLAdfguMjDE1M
      Y5Jy6K0u0ok4zfPqOdQ3xMKms99r4sQyUWrNkvcvIjHUClY/DdVnv4LhJdcJFgIq62sx6Iw4
      rCZMNicGWeD3v/l5CSabj4DHTlmRm7RqwGW3YNAbML3JDSd0Oj1V5cX4iitIxGKUF/uQ9CYm
      JyffVLiyTkd1dSVOd4B8Ik6R24HL7aSqpv6chltcUYbT6SEVj6K8ifaAJMnU1lRjcbjQS/+/
      nbvraRqKAzD+DJaxdls71nVrefEFg2ZGEo2GmHilF3wAL/isJiTe6AXRcKWJCEETZLDB3lq6
      l1JovZZLmjjI+f8+wElPep7TnHPRhKptMTunUTGKqZ73+pqwbRuSmJxWIpdyC791AUDMoNvF
      rloUzQrzpQLVuss48DnreTcfNU64mAQUyxZRVqexbKGX5omTBDtlXFEU4YVZ8kx4uf6KCXlW
      6ibLyzff/QGuooj+IKCgZVl5vk5WLzIzM4eb8pf118dlErHkGDx40kBLsSLi+Ipur0+5oGG7
      LiPPp9Vq4fs+wSRK8cT/ronjfshl0CGJr1K/OzkDCKXdwi+AEP+PBCCUdutugVTy7ctn2qOE
      Z41V4kyOoNuk5iwShDGL1RK7B0c093ewH7/m/PSQTCahYpg4i/cJ4zHh+QgvCPH9FnXnIadn
      JzxacsgZDhVDm/b07gQ5A0xTEvFh6xPRsIO1dA+/+ZtBZ0hjY5PMyXfCaMKfaI73b9/wdXub
      2XyRwx87dIYFNjbfsfdxi1avz4zzlIX8JRldo/1rn9W1dV6s3fxaVyUSwJR5vkdyMaI3hiT0
      MHSTYs0lT8juwRELbhXTMAmDARm9xOHeT3SzRs2tMOx2OW6fYlVt/GGIbRmMvB7ky7j2/LSn
      didIAEJpcggWSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQ
      SpMAhNIkAKE0CUAo7S/ffj7Y3AunNAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
      pG046eL7O0IAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Images/11111.PNG'>
        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
        JTr/G1I+hp4lZ++iAAAAAElFTkSuQmCC
      </shape>
      <shape name='Images/PIC.png'>
        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
        RU5ErkJggg==
      </shape>
      <shape name='Images/china-air-pollution.jpg'>
        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
        aE/XXnOzKZhM9nHtFdpAu625eHPOyb275NGjbJYIvgV3H7/Fd777HV4+fcrlmwv6lCaus4yb
        5Zq2vuKr569oasfdo3v0fcpx1DApp5wcH3N+eZVGegVDdHwcDuk44pLoQUuRxrgEwg/UIxR4
        1wGGzAhbXhtFnuf88Ic/Ym8+By8hFDEAWYJJEjjvkwEl771D03Wcn1/y4uULbm7WycBRs960
        rDevpHAdHgIBgmdSlmzqRsJzM8skE41h1/f0abJy3icvMoNRUFpDn1uark1f68drYrSmKHPK
        POdgPsMqzcndQ66uFrJZNjnzvRl903L33h10eh6qWY6KhkKL//5/+NYe//g/fo//+59/wo/r
        iq3WYGVRFgHbuEjTBToX6b0TYDFhTRidWKxiSpcZ0WdZLXFCQz5cRON9N54eMQa83jG347AW
        Sye0wCoy/ty/c8y77z1mMtmjmk0x1tJsNimGKDLd2yMC9SqlDecFNstkdRpndN5zcHhE73pm
        sznddovRWryiq6QRM4Zt18qJYsShoLdAL06lBrG9scYSk/ZMIAOP1TaNX3LCb9PWTydspw+7
        nDcdFNFGvDRfVNMp2lqIkeh7snw3Ng/joE6pz6SirkjAbbiNYSlUNF9bVqj0mSoN5XTOHWt5
        /+13eHQwobSajz/+ipt1My46RAYlAR0qamymeOudt+haz83NWlbJiOg0psJBTOz+5JiJThiE
        1iivRndQCd6MY+DHzWKRxu0hpkuAemMs1ha8fn1GkefcuXsX19UUXYE10t32QSgO3jvxdHcO
        YwxFIV/jvRAXY3Juda6n2y44efAOyxhw3TXaBOrNkjeveo7vP0BNDRNbMDs6IC9yNJrv/fC3
        uTg75ctPP+H07Iz1ck05mfDixSV977i4vOLl6Sn379+XkU1FotEcH5+wWC5kG5iE96SFkk4d
        Q+fED18P1w7GbkIrjRNzNWL0yWAPEdFHKIuS7373u2xWKzKtOToSobrre8kDSMsLSGqKJJYv
        sozHD+7x6MFdNuua56+EpNv1Ehqy2WzZ1lumRcXB4YF8r1KEomDTivwlS3bjvcvoreCt2mQo
        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
        YLft6doH/F+G6t9aD5GHZQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Images/pollution-wallpaper-1920x1080.jpg'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
